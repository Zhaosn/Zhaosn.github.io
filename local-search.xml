<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在25年10月的总结</title>
    <link href="/2025/2025annual_review/"/>
    <url>/2025/2025annual_review/</url>
    
    <content type="html"><![CDATA[<p>开眼看过世界，也脚踏实地存了一些资金。虽然回家的工作远远够不到梦想，好在家里的日常与我能够密切相关。初夏去了咸阳大秦音乐节，看了马飞、岛屿心情、南青、万能青年旅店的现场，很长一段时间，我躁动的摇滚心脏都能被安抚了。</p><p>从临毕业有点难过的心情过来，现在也逐渐认清什么是生活，从多少年都不能财务自由的假想敌中走出，看到5w块钱放到每月2k的生活费下够花2年，简单的算数+实际的存款=没那么焦虑了。</p><p>并没有急迫的生存压力，也认识到自己技能的丰富和优异，认清真正的主线后，感觉能放心的探索支线任务了。<br>我想说点涩话，就是最近我想到了我为什么想回家，就是与认识的环境继续做个适应，家永远都在，但是朋友和家人会逐渐减少，大学里每个学期开学我都会隐约存在分离焦虑，刚毕业能回家先工作是幸运的，况且我的这个选择能够在刚工作最窘迫的阶段做个缓冲。<br>享受未来和现在，不苛责过去的自己。就能增长生命的厚度。</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>B580使用秋葉aaakiSD-Forge开启SD画图加速的方法</title>
    <link href="/2025/SD-B580FULLPOWAH/"/>
    <url>/2025/SD-B580FULLPOWAH/</url>
    
    <content type="html"><![CDATA[<h1 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h1><p>显卡Arc B580，启动器版本绘世2.8.13</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><p>B站我自己，里面放了图片<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.bilibili.com/opus/1116551395134144550">[1]</span></a></sup></p></li><li><p>IPEX官网<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/intel/intel-extension-for-pytorch">[2]</span></a></sup></p></li></ol><p>(PS, 这玩意儿是Intel Extension for PyTorch的缩写？不如说是Intel PyTorch Extension的缩写○( ＾皿＾)っ)</p><p>(PPS, 根据<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/intel/intel-extension-for-pytorch">[2]</span></a></sup>的GPU里的<a href="https://intel.github.io/intel-extension-for-pytorch/index.html#installation?platform=gpu">🏃Installation</a>生成安装代码，可以看B站的图片)</p><ol start="3"><li><p>步骤1：启动器选择IPEX（Intel Extension for PyTorch）</p></li><li><p>步骤2：点击“启动命令提示符”（一键启动左边）</p></li><li><p>步骤3：执行官方指南的命令（根据Torch版本不同，请自行到官网复制）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m pip install torch==2.7.0 torchvision==0.22.0 torchaudio==2.7.0 --index-url https://download.pytorch.org/whl/xpu<br><br>python -m pip install intel-extension-for-pytorch==2.7.10+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/us/<br></code></pre></td></tr></table></figure></li><li><p>步骤4：点击一键启动，等</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">我这块出现了<br><span class="hljs-function"></span><br><span class="hljs-function">RuntimeError: <span class="hljs-title">Failed</span> <span class="hljs-title">to</span> <span class="hljs-title">import</span> <span class="hljs-title">diffusers.loaders.lora_pipeline</span> <span class="hljs-title">because</span> <span class="hljs-title">of</span> <span class="hljs-title">the</span> <span class="hljs-title">following</span> <span class="hljs-title">error</span>:</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">No</span> <span class="hljs-title">module</span> <span class="hljs-title">named</span> &#x27;<span class="hljs-title">triton.ops</span>&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>步骤5：禁用调用CUDA的triton模块(好像是bitsandbytes啥的，多亏kimi，工作上一直用的豆包在专业问题上日常很der)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">1.打开文件:</span><br><span class="hljs-string">F:\sd-webui-forge-aki-v1.0\python\Lib\site-packages\bitsandbytes\__init__.py</span><br><span class="hljs-string">2.在文件顶部添加以下代码，强制跳过 Triton 加载:</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> sys<br>sys.modules[<span class="hljs-string">&#x27;triton&#x27;</span>] = <span class="hljs-literal">None</span><br>sys.modules[<span class="hljs-string">&#x27;triton.ops&#x27;</span>] = <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure></li><li><p>喜提6it/s的速度，比之前DML的1.3it/s不知道高到哪里去了</p></li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.bilibili.com/opus/1116551395134144550">https://www.bilibili.com/opus/1116551395134144550</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://github.com/intel/intel-extension-for-pytorch">https://github.com/intel/intel-extension-for-pytorch</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>11月1号下班游记</title>
    <link href="/2024/OneDayDeRail/"/>
    <url>/2024/OneDayDeRail/</url>
    
    <content type="html"><![CDATA[<h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>下班突发奇想去美团上所谓“宾喜炸鸡xx首店”的商家地址看看。<br>到地方像个城中村，其实那里里市内最热闹的万达等商场聚集区很近。</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="交流摩托"><a href="#交流摩托" class="headerlink" title="交流摩托"></a>交流摩托</h2><p>摩托在人行道上停下，步行逛了一圈没看到什么店面，看到一个嘉陵弯梁110在等人，问他车在哪买的，答城东汽配城；问多少钱，答买车带上牌五千；问多少公里了，车还这么新，答一万公里不到，问保养周期他说每500换机油，我说我250换了打算两千再换；他说打算把车卖了，我问为什么，答平常开车没地方放，我说平常我就开到地下停车场，他也没回复啥；问油耗，他说20元能往返湟中两趟（约120km，合0.16￥/km)，我说我的125总里程还2000km不到（现一千三百多）油耗有时0.3￥/km，他说磨合比较重要，然后就是说什么机油里因为磨合会看到铁屑的事。我买车时送的两次保养因为我换地方了，所以换成了两瓶机油，还得自己想办法换了，现在偷懒一直没换。</p><h2 id="主线：探店外卖"><a href="#主线：探店外卖" class="headerlink" title="主线：探店外卖"></a>主线：探店外卖</h2><p>因为带着头盔还没摘，过来一个美团小哥（大概年龄靠近22岁）问我附近哪有这个店。（我那时发现自己来的理由有点好笑，人家是为了挣钱，我比较起来就是闲得）我被突如其来的问题整得有点懵，和他说我不是送外卖的，也是来找这个店，这个回复真是怪，一是就好像送外卖怎么了似的，二是我这动机自己听起来也无语。他刚好和店家电话也打通了，我隐隐约约能听到店家那边的对话，边说着我边跟着看他在路口拐弯越走越远。</p><p>我发动了车子往上开到那个巷子里，巷子里氛围很像<strong>“天注定”</strong>那个电影里有蛇女跳舞的那个巷子（水泥的地面和旁边水泥的一层店铺二层卧房的小楼带来的感觉）。尽头有个小卖店，</p><p>有个外卖老哥（看上去约50岁）在那抽烟，我问他那个店怎么找，他帮我指了路，我自从自己出门起都是看的导航来找路，这样子在人生地不熟的地方问一个去自己不知道去了干嘛的目的地的路，氛围真有点诡异。</p><p>他问我有单子没，面对行话我还是有点露怯，我说还没有送过，今天只是想探探路，他审视我几眼。我也是个现场的怪人，踏板摩托和电动车有区别；头盔有区别；制服有区别。他说我什么时候打算开始送，我只好说我不知道。虽然我自以为自己没有钱，但现在有个社会评价体系中更体面的工作，我没有不尊重和傲慢的意思，但我想起了<strong>黑暗骑士崛起</strong>里的监狱桥段，如果有一天被折断了脊椎丢到这种场景下，我应该就很难爬出去了——心态和意志不够。</p><p>骑车到了那，发现原来刚才步行跟着外卖员的方向就是到了那家店门口，和美团上的光鲜亮丽截然不同：没有任何装修、上面用广告的那种塑料布贴的店名丝毫无关、往里偷偷望去就好像<strong>赛博朋克：边缘行者</strong>里治死大卫他妈的医院，柜台上放着一堆从前在学校总见过的炸鸡的外卖袋，没敢往里面走，偷偷照了个相，就好像做贼似地，脑中闪过那种一回头发现同伙在身后导致突然开始缠斗的桥段，不过都没有。黑咕隆咚的地方我发动车转头走了，下次应该把之前买的NITECORE P20i揣上，天黑的早的时候这个是一个防身好选择，至少心里会更有安全感。</p><h2 id="支线：狭路相逢"><a href="#支线：狭路相逢" class="headerlink" title="支线：狭路相逢"></a>支线：狭路相逢</h2><p>往外出的时候和一个外卖员在闸杆边上面对面上了，状态就是你往左我往右的那种，最后我不自觉的多拧了一些，可能算是比较强势的让他退了退。</p><p>后来想想，在现在，如何判断一个人是不是讲理的人呢？如果人衣食无忧，开车走在路上或平常相见，并没有产生矛盾后将事情闹大的好处；但是如果人为生计奔波到没有什么退路，或因为某些暴力事件和因素潜移默化的影响导致讲不了道理，又有什么办法在当场保护自己呢？就如路怒来说，如果我没开着四轮的话，安全的最后一道防线是不达标的。但平衡用车成本和停车成本，现在我骑摩托又是比较好的，平衡风险和成本的这笔帐我是算不清的。</p><h2 id="支线：败家子的内疚"><a href="#支线：败家子的内疚" class="headerlink" title="支线：败家子的内疚"></a>支线：败家子的内疚</h2><p>我买摩托加上牌保险考驾照，当时还有黄牛办暂住证，加上换地方发展把车寄回家花了得一万三了。我虽然没另外向家里要钱，但说真的这些钱都是家里打得，我买车时只挣过两个月实习工资，算上我买了600块钱的手机、900的平板、3000的游戏本跌价，实习工资可以说已经花完了。将心比心的说，我自从开始掌握钱以后就再也不是理性消费的人了，为了自己想要而第一时间花钱买，虽然快乐了，但钱也没了，花到服务和业余教育上的两千+六千，如果我还不学那就真的是打水漂了。</p><h2 id="陌生人与怪咖：真人GalGame"><a href="#陌生人与怪咖：真人GalGame" class="headerlink" title="陌生人与怪咖：真人GalGame"></a>陌生人与怪咖：真人GalGame</h2><p>上周慕柚子社大名下载了<strong>魔女的夜宴</strong>和<strong>千恋万花</strong>，因幡巡线是第一次乱选的单身结局后第一个自然走上的线，从打打闹闹到开始煮饭之间还是比较喜欢打打闹闹，后面煮饭就没什么代入感了。互相猜来猜去那块儿心里也酸酸的，类似看<strong>“龙与虎”</strong>的感觉。每次工作上、生活上不提还好，一提到伴侣相关的事自己就会陷入某种思考：</p><blockquote><p>有伴的人是怎么认识的🤨、有了伴之后怎么发展关系❤️‍、关系到了一定程度怎么维持热情🔥。</p></blockquote><p>现在我还在第一步，不过从现在我对身边的观察来看好像后两步也很难走。我之前情窦初开的时候尝试走过两次第一步，都是没迈开腿。后来也有过一见动心小鹿乱撞般的冲动，都忍住了没去打扰。<br>现在更是现实了，</p><blockquote><p>首先没场景能认识人x、没人有时间随时见面粘在一起、没人满足之前两点还有相似爱好且是异性、自己不是财富自由、自己工作还不稳定、自己没个地方可以邀请人来开party、自己不擅长安排出门玩</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BG9SHY</title>
    <link href="/2024/bili-embed/"/>
    <url>/2024/bili-embed/</url>
    
    <content type="html"><![CDATA[<h1 id="新呼号"><a href="#新呼号" class="headerlink" title="新呼号"></a>新呼号</h1><p>BG9SHY（BH3FZJ注销）</p><h1 id="真是一个好呼号"><a href="#真是一个好呼号" class="headerlink" title="真是一个好呼号"></a>真是一个好呼号</h1><p>但是我的B站名依然是非主角（FZJ）</p><div id="music_div" class="music"><iframe src="//player.bilibili.com/player.html?bvid=BV1Ax411J7cT" scrolling="no" border="0" frameborder="no" framespacing="0" muted="0" allowfullscreen="true"></iframe></div><style>    iframe[src*='player.bilibili.com'] {    width: 100%;  /* 设置视频的宽度 */    height: 400px; /* 设置视频的高度 */    }</style><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;music_div&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;music&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?bvid=BV1Ax411J7cT&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">muted</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-tag">iframe</span><span class="hljs-selector-attr">[src*=<span class="hljs-string">&#x27;player.bilibili.com&#x27;</span>]</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-comment">/* 设置视频的宽度 */</span></span><br><span class="css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">666px</span>; <span class="hljs-comment">/* 设置视频的高度 */</span></span><br><span class="css">    &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>为什么我的机械硬盘总会自动起转</title>
    <link href="/2024/whatUseMyDisk/"/>
    <url>/2024/whatUseMyDisk/</url>
    
    <content type="html"><![CDATA[<h1 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h1><p>几百块买了个J1900主板，搭配上家里最早电脑的最早的DDR3内存条，本来初中时加了根内存条干到4G内存了，但是新的二十多块的淘宝内存条坏了导致不开机，尽管在老电脑上工作正常😮‍💨。这个电脑自买来刷上UbuntuServer就基本没关过，里面系统装在我买的一个二手固态硬盘上，那个固态硬盘金手指上是开有两个槽的，好像不是m.2接口，转接成SATA接口的盒子金手指上塑料也断了，反之接上还能用。机械硬盘是淘宝上买的50块钱500g那种，这种小机械硬盘投入小，不行了就拆来当摆件。每次我用hdparm -Y让硬盘停转之后过一阵子又会自启，可能和种子下载、jellyfin、smb有关，我每次发现时硬盘都自动转了数十天了。今天有空就让AI（讯飞星火）帮忙写了个脚本。</p><h1 id="失败的其中一次尝试"><a href="#失败的其中一次尝试" class="headerlink" title="失败的其中一次尝试"></a>失败的其中一次尝试</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>sudo hdparm -C /dev/sdb的输出是：</p><p>/dev/sdb:<br> drive state is:  active/idle<br>或者：</p><p>/dev/sdb:<br> drive state is:  standby<br>请注意这个输出前有一个空行<br>我需要一个在ubuntu系统下每两分钟自动执行的脚本，你可以分为一个脚本和我需要添加的sudo crontab中的一行<br>我希望在检测到 drive state is:  standby转化为 drive state is:  active/idle时在/home/zhaosn/disk.csv文件中添加一行，其由：<br>echo <code>TZ=UTC-8 date  +&quot;%Y/%m/%d %H:%M:%S, %s, %z, &quot;</code>的输出结果和sudo lsof /mnt/hdd的输出结果组合而来</p><h2 id="回复"><a href="#回复" class="headerlink" title="回复"></a>回复</h2><p>首先，我们需要创建一个脚本来检测硬盘状态并执行相应的操作。以下是脚本的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br>STATE=$(sudo hdparm -C /dev/sdb | grep <span class="hljs-string">&quot;drive state is&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$STATE</span>&quot;</span> == <span class="hljs-string">&quot;active/idle&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> `TZ=UTC-8 date +<span class="hljs-string">&quot;%Y/%m/%d %H:%M:%S, %s, %z, &quot;</span>`$(sudo lsof /mnt/hdd) &gt;&gt; /home/zhaosn/disk.csv<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>将以上内容保存为一个名为<code>check_disk_state.sh</code>的文件。接下来，我们需要为这个脚本添加可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chmod +x check_disk_state.sh<br></code></pre></td></tr></table></figure><p>最后，我们需要将这个脚本添加到crontab中以便每两分钟自动执行一次。请运行以下命令以编辑crontab：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -e<br></code></pre></td></tr></table></figure><p>在打开的编辑器中，添加以下一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">*/2 * * * * /path/to/check_disk_state.sh<br></code></pre></td></tr></table></figure><p>请将<code>/path/to/</code>替换为<code>check_disk_state.sh</code>文件的实际路径。保存并退出编辑器。现在，脚本将在每两分钟自动执行一次，并在检测到硬盘状态从standby变为active/idle时将相关信息追加到<code>/home/zhaosn/disk.csv</code>文件中。</p><p>其实这个表现不好，如果我用ls访问硬盘，lsof是看不到的</p><h1 id="换种思路"><a href="#换种思路" class="headerlink" title="换种思路"></a>换种思路</h1><h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2><p>我想在sudo lsof /mnt/hdd执行结果不为空时在/home/zhaosn/disk.csv文件中添加一行，其由：</p><p>echo <code>TZ=UTC-8 date  +&quot;%Y/%m/%d %H:%M:%S, %s, %z, &quot;</code>的输出结果和sudo lsof /mnt/hdd的输出结果组合而来。设置脚本需要root用户身份运行</p><h2 id="回复-1"><a href="#回复-1" class="headerlink" title="回复"></a>回复</h2><p>你可以使用以下脚本来实现你的需求：</p><ol><li>创建一个名为<code>check_disk_state.sh</code>的文件，并将以下内容复制到该文件中：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">set</span> -e<br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$EUID</span> -ne 0 ]]; <span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;This script must be run as root&quot;</span> 1&gt;&amp;2<br>   <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">do</span><br>    LSOF=$(sudo lsof /mnt/hdd)<br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$LSOF</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> `TZ=UTC-8 date +<span class="hljs-string">&quot;%Y/%m/%d %H:%M:%S, %s, %z, &quot;</span>`<span class="hljs-variable">$LSOF</span> &gt;&gt; /home/zhaosn/disk.csv<br>    <span class="hljs-keyword">fi</span><br>    sleep 60<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>保存并关闭文件。</p></li><li><p>为脚本添加可执行权限：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chmod +x check_disk_state.sh<br></code></pre></td></tr></table></figure><ol start="4"><li>以root用户身份运行脚本：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ./check_disk_state.sh<br></code></pre></td></tr></table></figure><p>这个脚本会持续监控<code>/mnt/hdd</code>目录的<code>lsof</code>结果，如果结果不为空，则在<code>/home/zhaosn/disk.csv</code>文件中添加一行，该行由<code>echo TZ=UTC-8 date +&quot;%Y/%m/%d %H:%M:%S, %s, %z, &quot;</code>的输出结果和<code>sudo lsof /mnt/hdd</code>的输出结果组合而成。同时，脚本会每隔60秒检查一次。</p>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机视觉第一次大作业</title>
    <link href="/2023/cannyOnN3350/"/>
    <url>/2023/cannyOnN3350/</url>
    
    <content type="html"><![CDATA[<h1 id="信息挖掘"><a href="#信息挖掘" class="headerlink" title="信息挖掘"></a>信息挖掘</h1><p>找到个将canny性能优化的示例代码，好像是用到多线程<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.codee.com/case-study-how-we-made-canny-edge-detector-algorithm-run-faster-part-2">[1]</span></a></sup><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/teamappentra/blog-codes/tree/main/canny-performance-part1">[2]</span></a></sup><br>Hough就没那么容易了，虽然知道大概原理但不知道代码怎么实现，真是很悲哀啊<br>还要通过比较两个图片里最大圆所处的坐标计算变换矩阵，hough做不出来没拿到坐标</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>先用提供的脚本编译了两个程序，跑了下发现可以用，直接将输入的pgm图片的路径改为bmp图像不行，使用在线转换工具转换后利用原始参数跑了一遍，效果不错。<br>参数都是什么作用原文档没有直接写，通读一遍代码发现有这种描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">float sigma,              /* Standard deviation of the gaussian kernel. */<br>      tlow,                 /* Fraction of the high threshold in hysteresis. */<br>      thigh;                /* High hysteresis threshold control. The actual<br>                               threshold is the (100 * thigh) percentage point<br>                               in the histogram of the magnitude of the<br>                               gradient image that passes non-maximal<br>                               suppression. */<br></code></pre></td></tr></table></figure><p>翻译一下：sigma：高斯核的标准偏差；tlow：迟滞的高阈值分数(?_?这个不知道是什么)；thigh：高滞后阈值控制。实际阈值是通过非极大值抑制(non-maximal suppression)的梯度图像(gradient image)的幅值直方图(histogram of the magnitude)中的(100 * thigh)个百分点。当参数调节为10.0；0.85、0.95时出现了较好的结果，噪声的边缘相比参考点的边缘小了很多。</p><p>现在尝试Hough圆检测，有大量的博客只简单介绍一下原理之后就调库，更让人鄙视的是一个原理抄的哪里都一样，有本事抄代码好好讲讲啊。后来找到一个练习者的博客里移植了更底层的代码<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/JoshuaQYH/CV-code">[3]</span></a></sup>，但由于使用了C++的类和CImg.h头文件，迁移可能需要更多时间深入学习。</p><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><p>我在主力机上安装了eclipse以期代替vs——我想尝试用开源或开放的方案处理各种计算机上的工作，因为拼多多微信学习通等国产软件各都有过：利用0day漏洞提权、扫描用户浏览记录、泄漏平台所有用户帐密的窒息操作。虽然我手机上照用不误，但电脑上有选择我便采用如下方案：Blender、LibreCAD、Libreoffice、eclipse、GIMP，涵盖了剪视频、建模、画图纸等等操作，传文件用localsend传到手机再用微信反之亦然，能用邮箱用邮箱。然后一开始查找范例用的是这个n3350的电脑，不想复制太多数据，就挑战用这个破ubuntu电脑整全流程。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.codee.com/case-study-how-we-made-canny-edge-detector-algorithm-run-faster-part-2">https://www.codee.com/case-study-how-we-made-canny-edge-detector-algorithm-run-faster-part-2</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://github.com/teamappentra/blog-codes/tree/main/canny-performance-part1">https://github.com/teamappentra/blog-codes/tree/main/canny-performance-part1</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://github.com/JoshuaQYH/CV-code">https://github.com/JoshuaQYH/CV-code</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>图像处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>水货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>23年5月整理下近日的思路</title>
    <link href="/2023/whatRecentlyMay3/"/>
    <url>/2023/whatRecentlyMay3/</url>
    
    <content type="html"><![CDATA[<h1 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h1><p>4月了解到天津4.30有无线电AB证考试，高三就想着等成年了赶紧能设台拿呼号，结果拖到了21，更可气的是自己怎么就突然被迫年龄成了成年人，我虽然更能和身边的资源和解，但很难与自身和解，总想逃离现在的生活。</p><p>跑题了，30号我如期考了试，30道选择题答对25道就算过，我复习了一天半，这个我早在高三偷拿手机时的某几天晚上就全刷了个遍，但还是没能全对，现在已知我错了一道题，其他的没过5月好像还有机会，疫情的压力一过频率也多了。</p><p>为了留时间，提前去南京上海玩了6天，上海看了外滩、mihoyo、南京路步行街，南京有鸡鸣寺、玄武湖、钟山上的中山陵音乐台和什么塔，6天时间太紧了，多了没地住，主要还是费钱。来回车票住宿吃纯算自己消费的天数话是三天，一千三百多元，上海虹桥17点回天津的高铁好像经过阳澄湖，F座看外面很棒。</p><h1 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h1><p>作业一团乱码，想着快点做结果最后都把时间浪费了，计算机视觉是在这个n3350上跑得，c语言只装了个编译器。虽然上网性能不好，但要是能抓住续航长屏幕高清这一特点也能用的很舒服，搭配xfce虽然没有win一样方便的触控板手势，但罢了罢了，反正这破电脑触控板不好。<strong>Alt+滚轮可以启用放大镜功能</strong></p><p>还有一次我这个n3350的电脑没电了，之前在写小爱课程表的时候<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.bilibili.com/video/BV1hG4y1Q7D1">[1]</span></a></sup>js算是玩的比较上手了，遂用网页写了个能获得当前电量并大字显示在浏览器界面的应用，linux的笔记本电量就是个简单的写着从100以内数字的文件，之前写过crontab记录电量的脚本，现在我想应该只用把sed调通就好，网页css的关键是margin<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.runoob.com/css/css-margin.html">[2]</span></a></sup></p><h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p>等拿到呼号就立刻打个牌子做个名片</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 其中5指每隔5秒刷新一次页面 --&gt;</span><br><span class="hljs-comment">&lt;!--&lt;meta http-equiv=&quot;refresh&quot; content=&quot;5&quot;&gt;--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-paragraph&quot;</span> &gt;</span> 90 <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-class">.my-paragraph</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">8000%</span>;</span><br><span class="css">    <span class="hljs-attribute">line-height</span>:<span class="hljs-number">0%</span>;</span><br><span class="css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css"></span><br><span class="css">    <span class="hljs-attribute">margin-top</span>:<span class="hljs-number">450px</span>;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br>sed -e &#x27;s/(?&lt;=\&lt;p\&gt;).*(?=\&lt;/p\&gt;)/30/g&#x27; ./batFullScreen.html<br>sed -e &#x27;s/\&lt;p\&gt;.*\&lt;/p\&gt;/30/g&#x27; ./batFullScreen.html<br>sed -i &#x27;$a # This is a test&#x27; ./batFullScreen.html<br>sed -e &#x27;s/oo/kk/g&#x27; ./batFullScreen.html<br><br></code></pre></td></tr></table></figure><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.bilibili.com/video/BV1hG4y1Q7D1">https://www.bilibili.com/video/BV1hG4y1Q7D1</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.runoob.com/css/css-margin.html">https://www.runoob.com/css/css-margin.html</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中州韵配置指南</title>
    <link href="/2023/rimeEverything/"/>
    <url>/2023/rimeEverything/</url>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>安装linux作为我EDC用机的系统后，在配置中州韵输入法的过程中耗费了许多时间，问题有：选择输入法框架(ibus/fcitx)、备选词显示、emoji输入、时间日期输入、设置双拼输入法等问题。本文将列举出我解决过程中有帮助的一些网站，同时整理一下自己的思路以便以后方便快速布置工作环境。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><ol><li>选择输入法框架<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://rime.im/download/">[1]</span></a></sup> 我使用了ibus，因为当时好像发现ibus是原生的，虽然安装过fcitx，但后来可能是因为适配原因放弃了这个方案。</li></ol><ol start="2"><li>这个网站<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/rime/home/wiki/UserGuide">[2]</span></a></sup> 中最有用的内容是介绍了导出设置和词典的功能，也可以从文章内的链接跳转至高级玩法。说实在的，官方的文档真难懂。</li></ol><ol start="3"><li>这个网站<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.cnblogs.com/hellxz/p/10198540.html">[3]</span></a></sup> 描述了设置文件的位置和作用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">/usr/share/rime-data：此目录为rime输入方案的数据源（差不多这意思）<br>~/.config/ibus/rime或~/.config/fcitx/rime：这里是配置文件最终生效的地方<br><br>default.yaml:这里最后的部署整合到一起的配置文件，不要在这里写配置<br>default.custom.yaml: 在这个文件中，我们可以创建自定义的全局配置，需要自己创建<br>installation.yaml:安装时自动创建的配置文件<br>输入方案名.schema.yaml：输入方案的默认配置文件<br>输入方案名.custom.yaml: 仅对指定输入方案的配置进行修改的配置文件<br>其余的均为输入方案生成的，可以不管<br>symbols.yaml:这个文件是符号相关的设置<br></code></pre></td></tr></table></figure></li></ol><ol start="4"><li>这个网站<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.aisoutu.com/a/1655310">[4]</span></a></sup>介绍了给输入法引入lua脚本生成当前时间日期的方法，但我使用时将translators直接放进小鹤双拼的schema.yaml时没有起作用</li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://rime.im/download/">https://rime.im/download/</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://github.com/rime/home/wiki/UserGuide">https://github.com/rime/home/wiki/UserGuide</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://www.cnblogs.com/hellxz/p/10198540.html">https://www.cnblogs.com/hellxz/p/10198540.html</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://www.aisoutu.com/a/1655310">https://www.aisoutu.com/a/1655310</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个简单的闭门传感系统建设规划</title>
    <link href="/2023/securitySensor/"/>
    <url>/2023/securitySensor/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>门开关传感器之前做过几版，实际上之前称不上传感器，之前只是个手动做的带开关和非门的报警器罢了。最接近现在的一版中采用的ne555有较大的静态功耗，现在使用单片机，希望它的低功耗能带来较长时间的续航。</p><h1 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h1><p>发送开/关门事件、ir汇报开关错误率、ir汇报电池状况、蜂鸣器摩斯电码发送超时报警、调试按键按下通过摩斯电码或ir信息包发送2~4信息</p><h1 id="前期分析"><a href="#前期分析" class="headerlink" title="前期分析"></a>前期分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>家里有两层门，一个是外门，一个是里面一个装饰用的门，有时存在忘记关外侧门的问题（以后装修记得只装一个门就好）。由此产生了对门开关状态检测的要求，对于一个DIY爱好者，当然喜欢自己做，经过几次迭代升级，我现在写出第三版计划的预期目标书。</p><h2 id="前版本分析"><a href="#前版本分析" class="headerlink" title="前版本分析"></a>前版本分析</h2><h3 id="第一版"><a href="#第一版" class="headerlink" title="第一版"></a>第一版</h3><p>第一版只采用一节CR2032钮扣电池，门传感器采用易拉罐皮作弹片，曲别针作触点的开关（闭门时断开）。<br>优点：</p><ul><li>断电时零功耗</li><li>小<br>缺点：</li><li>没有特殊功能如：蜂鸣器</li><li>开关外观不美观且大</li></ul><h3 id="第二版"><a href="#第二版" class="headerlink" title="第二版"></a>第二版</h3><p>第二版经过几次迭代，一开始使用ne555为灯增加闪烁功能，更易引起注意，后来添加一个ne555驱动一个无内部震荡电路的蜂鸣器。<br>优点：</p><ul><li>容易吸引注意</li><li>使用一个上拉的开关(闭门时拉低)，减小了开关复杂水平<br>缺点：</li><li>开门即响，不够智能</li><li>ne555即使通过复位脚停止震荡也有同样的功耗</li><li>为实现闭门断电使用了一个mos管，但奇怪的是有时有较大的发热、压降，导致有时2s锂电在mos管后对芯片供电电压不足4v，从而工作异常。（mos使用坏显卡拆机，ne555购自淘宝。</li></ul><h3 id="第三版（理论）"><a href="#第三版（理论）" class="headerlink" title="第三版（理论）"></a>第三版（理论）</h3><p>第三版有如下几个预期功能：</p><ol><li>休眠功耗达到uA级</li><li>有向中心设备传递时间的功能</li><li>成本尽量低</li><li>使用PCB<br><del>且现在经简易选型决定使用立创商城里最便宜且有货的NY8A051H</del>，向中心设备传递数据使用红外发射管，但这个芯片采用1k*14bit的EPROM，不能多次编程且容量较小，可能不够为蜂鸣器存储音乐。但我希望专门优化红外线传输功能，只要能传递能够计算出开关门事件发生时间就够了。播放音乐可以交给中央采集设备，最好再优化下蜂鸣器，当出现没有回传事件的故障时也能有开门超时报警功能。</li></ol><h1 id="工程分析"><a href="#工程分析" class="headerlink" title="工程分析"></a>工程分析</h1><p>实际做起来才发现有许多实际问题，我想先考虑清楚一个框架再开始写会有许多帮助。以下内容虽然是普通的文字，但可能经过了综合考量和推敲，但考量的过程没有保留。请注意！</p><ul><li>延时函数：延时函数使用中断优先较低的定时器解决，中断前设置延时标志位即一个volatile变量，检测到接下来的内容可能中断就执行些不怕打断的工作。</li></ul><h1 id="程序框图"><a href="#程序框图" class="headerlink" title="程序框图"></a>程序框图</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">开门（下降沿中断从睡眠唤醒，然后关中断，用软delay函数间隔采样：总采样数右移一位(十进制除2操作)和开关开次数比较进行消抖）<br>?<br>计时器计时（每次溢出给一个变量+1）关门后发送开门时间。时间超时-蜂鸣器提示-超出过长时间-蜂鸣器报警，此时关门即刻停止报警，消抖开关后确认关门，ir发送报文，最后发出简短提醒提示已关好或回到初始状态<br>任意时刻按下报文按键回报电量，关门后按键蜂鸣器发送数据包[数据包编号；开门时间；电量；报警状态]<br>：消抖失败，给网关发送开关故障报告<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bmp to Hex——图片在单片机上显示</title>
    <link href="/2022/bmp2hex/"/>
    <url>/2022/bmp2hex/</url>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>我通过在网上寻找工具及借鉴开源社区留言，探索出一种位图转二进制写入单片机的工作流程<br><img src="/img/IMG_20221129_004530.jpg" alt="有图有真相"></p><h1 id="流水帐式流程"><a href="#流水帐式流程" class="headerlink" title="流水帐式流程"></a>流水帐式流程</h1><ol><li>使用开源的GIMP处理图像为128x53的16bit二值化BMP文件</li><li>我找到一个开源工具，使用Monochrome预设导出图片，其内置大小端设置，但其将2byte作为最小粒度<blockquote><p><a href="https://github.com/riuson/lcd-image-converter">https://github.com/riuson/lcd-image-converter</a></p></blockquote></li><li>显示不正常，可感受到以一小块为单位左右割裂颠倒。网上找到一个帖子描述了这种现象的成因。<blockquote><p><a href="https://forum.arduino.cc/t/solved-problem-drawing-bmp-in-oled-i2c-ssd1306-with-esp8266/417698/11">https://forum.arduino.cc/t/solved-problem-drawing-bmp-in-oled-i2c-ssd1306-with-esp8266/417698/11</a></p></blockquote></li><li>文章锁定前最后一个大佬给出了一个c程序，但我用不了</li><li>我上手修改，重拾大一下c++，用到了当时不懂现在还不懂的动态内存和指针<h1 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//Origin:https://forum.arduino.cc/t/solved-problem-drawing-bmp-in-oled-i2c-ssd1306-with-esp8266/417698/11</span><br><span class="hljs-comment">//Some changes were made on the basis of the original version, which did not work properly on my VS2010</span><br><span class="hljs-comment">//MIT Lisences By:Zhaosn</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> myBitmap[] = &#123; <span class="hljs-comment">//this is the array char</span><br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span><br>&#125;;<br><span class="hljs-function"><span class="hljs-keyword">char</span> <span class="hljs-title">inverter</span><span class="hljs-params">(<span class="hljs-keyword">char</span> val)</span></span>&#123; <span class="hljs-comment">// this function invert the value</span><br><span class="hljs-keyword">char</span> ret;<br><span class="hljs-keyword">char</span> a = (val &amp; <span class="hljs-number">0x01</span>)&lt;&lt;<span class="hljs-number">7</span>;<br><span class="hljs-keyword">char</span> b = (val &amp; <span class="hljs-number">0x02</span>)&lt;&lt;<span class="hljs-number">5</span>;<br><span class="hljs-keyword">char</span> c = (val &amp; <span class="hljs-number">0x04</span>)&lt;&lt;<span class="hljs-number">3</span>;<br><span class="hljs-keyword">char</span> d = (val &amp; <span class="hljs-number">0x08</span>)&lt;&lt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">char</span> e = (val &amp; <span class="hljs-number">0x10</span>)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">char</span> f = (val &amp; <span class="hljs-number">0x20</span>)&gt;&gt;<span class="hljs-number">3</span>;<br><span class="hljs-keyword">char</span> g = (val &amp; <span class="hljs-number">0x40</span>)&gt;&gt;<span class="hljs-number">5</span>;<br><span class="hljs-keyword">char</span> h = (val &amp; <span class="hljs-number">0x80</span>)&gt;&gt;<span class="hljs-number">7</span>;<br><br>ret = a|b|c|d|e|f|g|h;<br><span class="hljs-keyword">return</span> ret;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br><br><span class="hljs-keyword">int</span> size = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(myBitmap);<span class="hljs-comment">// myBitmap is the name for our array char</span><br><span class="hljs-keyword">char</span> *values = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br>values = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span> [size];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; size; i++)&#123;<br>values[i] = <span class="hljs-built_in">inverter</span>(myBitmap[i]); <span class="hljs-comment">// here we revert each value;*</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%02x&quot;</span>,(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)values[i]); <span class="hljs-comment">//need &quot;(unsigned char)&quot; or it will display as &quot;0xffffffxx&quot;. It is &quot;2&#x27;s complement&quot;.</span><br><span class="hljs-keyword">if</span>(count == <span class="hljs-number">15</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;,\n&quot;</span>);<br>count = <span class="hljs-number">0</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i == size<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;, &quot;</span>);<br>count++;<br>&#125;<br>&#125;<br><span class="hljs-keyword">delete</span> values;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ES6 与 commonjs 与 gulp</title>
    <link href="/2022/es6-js-gulp/"/>
    <url>/2022/es6-js-gulp/</url>
    
    <content type="html"><![CDATA[<p>从《hexo minifier gulp 压缩博客》到对 ES6 的研究</p><span id="more"></span><p>对之前的“压缩博客”中提到的 gulpfile 改造的过程中加入了 imagemin 但从7.0.1后其不再支持commonjs语法。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/imagemin/imagemin/issues/380">[1]</span></a></sup><br>但我就想用最新版本，开始改造后找各种资料从零开始了解js语法规范。<br>经过各种尝试终于有一次返回了详细的解决方法而不是错误代码让我自己去找。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">zhaosn@collei:~/Documents/Blog$ gulp<br>file:///home/zhaosn/Documents/Blog/gulpfile.mjs:4<br>import &#123;uglify&#125; from &#x27;gulp-uglify-es&#x27;;//https://gitlab.com/itayronen/gulp-uglify-es<br>        ^^^^^^<br>SyntaxError: Named export &#x27;uglify&#x27; not found. The requested module &#x27;gulp-uglify-es&#x27; is a CommonJS module, which may not support all module.exports as named exports.<br>CommonJS modules can always be imported via the default export, for example using:<br><br>import pkg from &#x27;gulp-uglify-es&#x27;;<br>const &#123;uglify&#125; = pkg;<br><br>zhaosn@collei:~/Documents/Blog$ gulp<br>file:///home/zhaosn/Documents/Blog/gulpfile.mjs:4<br>import &#123;plugin as uglify&#125; from &#x27;gulp-uglify-es&#x27;;//https://gitlab.com/itayronen/gulp-uglify-es<br>        ^^^^^^<br>SyntaxError: Named export &#x27;plugin&#x27; not found. The requested module &#x27;gulp-uglify-es&#x27; is a CommonJS module, which may not support all module.exports as named exports.<br>CommonJS modules can always be imported via the default export, for example using:<br><br>import pkg from &#x27;gulp-uglify-es&#x27;;<br>const &#123;plugin: uglify&#125; = pkg;<br></code></pre></td></tr></table></figure><p>原代码片段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> imagemin, &#123;gifsicle, mozjpeg, optipng, svgo&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-imagemin&#x27;</span>;<br><span class="hljs-keyword">import</span> gulp <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp&#x27;</span>;<br><span class="hljs-keyword">import</span> cleancss <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-clean-css&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123;uglify&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-uglify-es&#x27;</span>;<span class="hljs-comment">//https://gitlab.com/itayronen/gulp-uglify-es</span><br><span class="hljs-keyword">import</span> htmlmin <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-html-minifier-terser&#x27;</span>;<br></code></pre></td></tr></table></figure><p>上个博文里用的 require 全改成了 import ，下面的 gulp.task 都没改。uglify 之前是 require().default 的形式，事出反常，上网找后参考<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://es6.ruanyifeng.com/#docs/module">[2]</span></a></sup>添加了花括号。<br>然后边改边试，改到不报错大概就成功了呗，于是我开始乱试。<br>最后我使用了以下代码的「片段」成功了，我注释掉了uglify因为我不知该怎样适配其后的”.default”</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> imagemin, &#123;gifsicle, mozjpeg, optipng, svgo&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-imagemin&#x27;</span>;<br><span class="hljs-keyword">import</span> gulp <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp&#x27;</span>;<br><span class="hljs-keyword">import</span> cleancss <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-clean-css&#x27;</span>;<br><span class="hljs-comment">//let uglify = require(&#x27;gulp-uglify-es&#x27;).default;//https://gitlab.com/itayronen/gulp-uglify-es</span><br><span class="hljs-keyword">import</span> htmlmin <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gulp-html-minifier-terser&#x27;</span>;<br><span class="hljs-comment">// 压缩public目录下的图片</span><br><span class="hljs-comment">//https://github.com/sindresorhus/gulp-imagemin</span><br>gulp.task(<span class="hljs-string">&#x27;minify-images&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> gulp.src([<span class="hljs-string">&#x27;./public/img/*.jpg&#x27;</span>,<span class="hljs-string">&#x27;./public/img/*.png&#x27;</span>])<br>        .pipe(imagemin([<br>            mozjpeg(&#123;<span class="hljs-attr">quality</span>: <span class="hljs-number">75</span>, <span class="hljs-attr">progressive</span>: <span class="hljs-literal">true</span>&#125;),<br>    optipng(&#123;<span class="hljs-attr">optimizationLevel</span>: <span class="hljs-number">5</span>&#125;)<br>        ]))<br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>))<br>&#125;);<br></code></pre></td></tr></table></figure><p>执行结果发现图片压缩需要大量时间但也没多少成果，所以这份研究没那么有意义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">zhaosn@collei:~/Documents/Blog$ gulp <br>[05:51:02] Using gulpfile ~/Documents/Blog/gulpfile.mjs<br>[05:51:02] Starting <span class="hljs-string">&#x27;default&#x27;</span>...<br>[05:51:02] Starting <span class="hljs-string">&#x27;minify-css&#x27;</span>...<br>[05:51:02] Starting <span class="hljs-string">&#x27;minify-html&#x27;</span>...<br>[05:51:02] Starting <span class="hljs-string">&#x27;minify-images&#x27;</span>...<br>[05:51:06] Finished <span class="hljs-string">&#x27;minify-css&#x27;</span> after 3.92 s<br>[05:51:38] Finished <span class="hljs-string">&#x27;minify-html&#x27;</span> after 37 s<br>[05:53:40] gulp-imagemin: Minified 7 images (saved 1.72 MB - 41.1%)<br>[05:53:40] Finished <span class="hljs-string">&#x27;minify-images&#x27;</span> after 2.63 min<br>[05:53:40] Finished <span class="hljs-string">&#x27;default&#x27;</span> after 2.63 min<br></code></pre></td></tr></table></figure><p>需要注意我将gulpfile文件后缀改为了”.mjs”，理论上这样会使hexo以es6语法读取这个文件</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/imagemin/imagemin/issues/380">https://github.com/imagemin/imagemin/issues/380</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://es6.ruanyifeng.com/#docs/module">https://es6.ruanyifeng.com/#docs/module</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>日常</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Free Bird</title>
    <link href="/2022/music-embed/"/>
    <url>/2022/music-embed/</url>
    
    <content type="html"><![CDATA[<div id="music_div" class="music"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=350 height=86 src="//music.163.com/outchain/player?type=2&id=21052194&auto=0&height=66"></iframe></div><style>    .music{margin: auto;width: 50%;z-index:4;bottom:0;left:30px}    @media screen and (max-width:768px){        .music{display:none}    }</style><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;music_div&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;music&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">marginwidth</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">marginheight</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">350</span> <span class="hljs-attr">height</span>=<span class="hljs-string">86</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//music.163.com/outchain/player?type=2&amp;id=21052194&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-class">.music</span>&#123;<span class="hljs-attribute">margin</span>: auto;<span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<span class="hljs-attribute">z-index</span>:<span class="hljs-number">4</span>;<span class="hljs-attribute">bottom</span>:<span class="hljs-number">0</span>;<span class="hljs-attribute">left</span>:<span class="hljs-number">30px</span>&#125;</span><br><span class="css"><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">768px</span>)&#123;</span><br><span class="css"><span class="hljs-selector-class">.music</span>&#123;<span class="hljs-attribute">display</span>:none&#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>tailscale-linux-子网配置</title>
    <link href="/2022/tailscale-subnet-linux/"/>
    <url>/2022/tailscale-subnet-linux/</url>
    
    <content type="html"><![CDATA[<p>tailscale在linux下组网需要配置，不像win一样Plug and play。这也是linux的乐趣，只有真正热爱且有时间的人会得到奖励。</p><span id="more"></span><p>之前一直没找到方法，今天才找到官方文档中的相关部分。<br>先看链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">https://tailscale.com/kb/1019/subnets/#enable-ip-forwarding<br>https://tailscale.com/kb/1023/troubleshooting/#why-do-i-get-an-error-about-ip-forwarding-when-using-advertise-routes<br></code></pre></td></tr></table></figure><h2 id="Enable-IP-forwarding"><a href="#Enable-IP-forwarding" class="headerlink" title="Enable IP forwarding"></a>Enable IP forwarding</h2><p>If your Linux system has a /etc/sysctl.d directory, use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.ipv4.ip_forward = 1&#x27;</span> | sudo tee -a /etc/sysctl.d/99-tailscale.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.ipv6.conf.all.forwarding = 1&#x27;</span> | sudo tee -a /etc/sysctl.d/99-tailscale.conf<br>sudo sysctl -p /etc/sysctl.d/99-tailscale.conf<br></code></pre></td></tr></table></figure><p>Otherwise, use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.ipv4.ip_forward = 1&#x27;</span> | sudo tee -a /etc/sysctl.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.ipv6.conf.all.forwarding = 1&#x27;</span> | sudo tee -a /etc/sysctl.conf<br>sudo sysctl -p /etc/sysctl.conf<br></code></pre></td></tr></table></figure><p>If your Linux node uses firewalld, you may need to also allow masquerading due to a known issue. As a workaround, you can allow masquerading with this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-masquerade<br></code></pre></td></tr></table></figure><p>Other distros may require different steps.</p><p>When enabling IP forwarding, ensure your firewall is set up to deny traffic forwarding by default. This is a default setting for common firewalls like <code>ufw</code> and <code>firewalld</code>, and ensures your device doesn’t route traffic you don’t intend.</p>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo minifier gulp 压缩博客</title>
    <link href="/2022/hexo-minifier/"/>
    <url>/2022/hexo-minifier/</url>
    
    <content type="html"><![CDATA[<p>关键词：hexo-all-minifier gulp 插件</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">https://summerandwinter.github.io/hexo-minify-two.html<br>https://ehlxr.me/2016/08/30/使用Hexo基于GitHub-Pages搭建个人博客（三）/<br></code></pre></td></tr></table></figure><p>安装后时间变成了UTC，我一不小心用之前的存档覆盖了博客一堆内容，欲哭无泪，但时间问题还没解决</p><p>后来再次尝试进行博客压缩，找到gulp，有一位前辈的研究很独特，在此放个链接：</p><blockquote><p><a href="https://blog.inkuang.com/2021/405/">https://blog.inkuang.com/2021/405/</a></p></blockquote><p>为了防止丢失，我从以上文章中总结了一些内容：</p><h1 id="其他教程存在的问题"><a href="#其他教程存在的问题" class="headerlink" title="其他教程存在的问题"></a>其他教程存在的问题</h1><p>使用关键词 hexo gulp 在网上搜索，可以搜到一堆类似的教程，但是根据我的实际测试，网上搜到的这些教程大部分都已经过时了，现在再使用的话或多或少的存在一些问题。</p><p>这些教程中一般都是通过安装 gulp-minify-css、gulp-uglify、gulp-htmlclean、gulp-htmlmin 这几个插件来处理的。下面按照压缩任务划分，分别说明一下现在还按照这些教程操作的话存在的一些问题。<br>gulp-minify-css 这个插件已弃用，请使用 gulp-clean-css 。这虽然并不影响我们的正常使用该插件，但是有更好的替代品的话为什么还要用这个已弃用的插件呢？<br>gulp-uglify 不兼容ES6</p><p>上面提到的插件中 gulp-htmlclean 和 gulp-htmlmin 是用来压缩 HTML 代码的。</p><p>网上教程的一般做法是先将代码传递给 gulp-htmlclean 清理掉其中的空白，然后再传递给 gulp-htmlmin 来移除注释、压缩 HTML 文件中的 CSS、JS 代码等。然而查看 gulp-htmlmin 所基于的 html-minifier 的文档发现，它有一个 collapseWhitespace 参数，设置为 true 时可以移除 HTML 代码中的空白块，那还多此一举的安装一个 gulp-htmlclean 插件干什么呢？</p><p>另外，上面提到了 gulp-htmlmin 可以压缩 HTML 中的 JS 代码，这个功能用的是跟 gulp-uglify 一样的底层库 uglify-js 来实现的，这也就导致它同样的不兼容 ES6 标准。最终会发现 HTML 文件中的内容并没有被全部压缩成“一行”，仍有部分 JS 代码是以未被压缩的形式存在的。</p><h1 id="操作方法及任务配置"><a href="#操作方法及任务配置" class="headerlink" title="操作方法及任务配置"></a>操作方法及任务配置</h1><p>根据 gulp 及各个插件的文档，我们首先需要全局安装 gulp-cli，然后在博客工作目录下安装需要的插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install --global gulp-cli<br>npm install gulp gulp-clean-css gulp-uglify-es gulp-html-minifier-terser<br></code></pre></td></tr></table></figure><p>安装完成后在博客工作目录下新建文件 gulpfile.js ，写入如下 gulp 任务配置代码（详细描述见注释）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> gulp = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;gulp&#x27;</span>);<br><span class="hljs-keyword">const</span> cleancss = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;gulp-clean-css&#x27;</span>);<br><span class="hljs-keyword">const</span> uglify = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;gulp-uglify-es&#x27;</span>).default;<br><span class="hljs-keyword">const</span> htmlmin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;gulp-html-minifier-terser&#x27;</span>);<br><br><br><span class="hljs-comment">// 压缩public目录下的css文件</span><br><span class="hljs-comment">// 可接受参数的文档：https://github.com/jakubpawlowicz/clean-css#constructor-options</span><br>gulp.task(<span class="hljs-string">&#x27;minify-css&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> gulp.src(<span class="hljs-string">&#x27;./public/**/*.css&#x27;</span>)           <span class="hljs-comment">// 处理public目录下所有的css文件，下同</span><br>        .pipe(cleancss(&#123; <span class="hljs-attr">compatibility</span>: <span class="hljs-string">&#x27;ie8&#x27;</span> &#125;))  <span class="hljs-comment">// 兼容到IE8</span><br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>&#125;);<br><br><span class="hljs-comment">// 压缩public目录下的js文件</span><br>gulp.task(<span class="hljs-string">&#x27;minify-js&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> gulp.src(<span class="hljs-string">&#x27;./public/**/*.js&#x27;</span>)<br>        .pipe(uglify())<br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>&#125;);<br><br><span class="hljs-comment">// 压缩public目录下的html文件</span><br><span class="hljs-comment">// 可接受参数的文档：https://github.com/terser/html-minifier-terser#options-quick-reference</span><br>gulp.task(<span class="hljs-string">&#x27;minify-html&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> gulp.src(<span class="hljs-string">&#x27;./public/**/*.html&#x27;</span>)<br>        .pipe(htmlmin(&#123;<br>            <span class="hljs-attr">removeComments</span>: <span class="hljs-literal">true</span>,                 <span class="hljs-comment">// 移除注释</span><br>            <span class="hljs-attr">removeEmptyAttributes</span>: <span class="hljs-literal">true</span>,          <span class="hljs-comment">// 移除值为空的参数</span><br>            <span class="hljs-attr">removeRedundantAttributes</span>: <span class="hljs-literal">true</span>,      <span class="hljs-comment">// 移除值跟默认值匹配的属性</span><br>            <span class="hljs-attr">collapseBooleanAttributes</span>: <span class="hljs-literal">true</span>,      <span class="hljs-comment">// 省略布尔属性的值</span><br>            <span class="hljs-attr">collapseWhitespace</span>: <span class="hljs-literal">true</span>,             <span class="hljs-comment">// 移除空格和空行</span><br>            <span class="hljs-attr">minifyCSS</span>: <span class="hljs-literal">true</span>,                      <span class="hljs-comment">// 压缩HTML中的CSS</span><br>            <span class="hljs-attr">minifyJS</span>: <span class="hljs-literal">true</span>,                       <span class="hljs-comment">// 压缩HTML中的JS</span><br>            <span class="hljs-attr">minifyURLs</span>: <span class="hljs-literal">true</span>                      <span class="hljs-comment">// 压缩HTML中的链接</span><br>        &#125;))<br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>))<br>&#125;);<br><br><span class="hljs-comment">// 默认任务，不带任务名运行gulp时执行的任务</span><br>gulp.task(<span class="hljs-string">&#x27;default&#x27;</span>, gulp.parallel(<br>    <span class="hljs-string">&#x27;minify-css&#x27;</span>, <span class="hljs-string">&#x27;minify-js&#x27;</span>, <span class="hljs-string">&#x27;minify-html&#x27;</span><br>));<br></code></pre></td></tr></table></figure><p>保存之后先用 hexo g 生成博客文件，然后执行命令 gulp 就可以对刚刚生成的博客文件（public 目录下的文件）进行压缩优化处理了。</p><h1 id="以上文章来自：https-blog-inkuang-com-2021-405"><a href="#以上文章来自：https-blog-inkuang-com-2021-405" class="headerlink" title="以上文章来自：https://blog.inkuang.com/2021/405/"></a>以上文章来自：<a href="https://blog.inkuang.com/2021/405/">https://blog.inkuang.com/2021/405/</a></h1>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下调用摄像头拍照-v4l2与ffmpeg</title>
    <link href="/2022/v4l2-theLinuxVideoSolution/"/>
    <url>/2022/v4l2-theLinuxVideoSolution/</url>
    
    <content type="html"><![CDATA[<h1 id="我的实际操作记录"><a href="#我的实际操作记录" class="headerlink" title="我的实际操作记录"></a>我的实际操作记录</h1><h2 id="v4l2获取图像部分"><a href="#v4l2获取图像部分" class="headerlink" title="v4l2获取图像部分"></a>v4l2获取图像部分</h2><p>找到了这位大佬的博客<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://zhaoxuhui.top/blog/2021/09/23/v4l2-introduction-and-usb-camera-bayer-raw-data.html">[6]</span></a></sup>，是本文学习的基础。具体操作总结如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">v4l2-ctl --list-devices <span class="hljs-comment">#显示当前连接的摄像头设备（必须）</span><br>v4l2-ctl -d /dev/video0 <span class="hljs-comment">#连接到一个设备（必须）</span><br>v4l2-ctl -D <span class="hljs-comment">#输出设备的驱动信息</span><br>v4l2-ctl -L <span class="hljs-comment">#输出当前设备支持的控制选项</span><br>v4l2-ctl --list-formats-ext <span class="hljs-comment">#注意⚠️返回值写着摄像头支持的所有输出模式，如YUYV（必须）</span><br>v4l2-ctl --verbose --set-fmt-video=width=640,height=480,pixelformat=YUYV --stream-mmap --stream-count=1 --stream-to=test.yuv <span class="hljs-comment">#在当前位置生成图片，注意pixelformat报错时回到5️⃣（必须）</span><br></code></pre></td></tr></table></figure><p>但我在第6️⃣步时没能成功输出能看的图片，于是下载了obs试试可行性，确认可行。obs作为开源软件可以方便的查看它的原代码。下附部分obs返回的调试消息<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="1234567891011121314151617181920info: v4l2-input: /dev/video1 seems to not support video captureinfo: v4l2-input: Found device &#x27;USB Camera: USB Camera&#x27; at /dev/video0info: v4l2-input: Start capture from /dev/video2error: v4l2-input: Unable to open deviceerror: v4l2-input: Initialization failed, errno: 没有那个文件或目录info: v4l2-input: Start capture from /dev/video0info: v4l2-input: Input: 0info: v4l2-input: Found input &#x27;Camera 1&#x27; (Index 0)info: v4l2-controls: setting default for Power Line Frequency to 2info: v4l2-input: Pixelformat: YUYV 4:2:2 (available)info: v4l2-input: Pixelformat: RGB3 (Emulated) (unavailable)info: v4l2-input: Pixelformat: BGR3 (Emulated) (available)info: v4l2-input: Pixelformat: YU12 (Emulated) (available)info: v4l2-input: Pixelformat: YV12 (Emulated) (available)info: v4l2-input: Stepwise and Continuous framesizes are currently hardcodedinfo: v4l2-input: Resolution: 640x480info: v4l2-input: Pixelformat: YUYVinfo: v4l2-input: Linesize: 1280 Bytesinfo: v4l2-input: Framerate: 30.00 fpsinfo: v4l2-input: /dev/video0: select timeout set to 166666 (5x frame periods)">[5]</span></a></sup>。</p><ol><li>通过在开源代码里寻找，找到了疑似实现功能的代码片段<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/obsproject/obs-studio/blob/c5015d0e6cb180d138e1a9e2258afd903254b9ea/plugins/linux-v4l2/v4l2-input.c">[1]</span></a></sup>。但是我看不懂😵‍💫，于是搜寻其他信息</li><li>我虽然知道YUV和RGB不同，却不知道还有.yuv这种格式，6️⃣步所得的结果并不能以.jpg方式打开/.yuv格式打开结果不正常，因此需要进行转换。我使用网上找到的命令(下代码块第一行)，打开能看到大概外形但是像素位置错乱。估计因为没有选择正确的”-pix_fmt”</li><li>通过指定原-pix_fmt获得了正确结果(下代码块第二行)<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://stackoverflow.com/questions/70961566/how-to-convert-raw-yuv-image-to-jpg">[2]</span></a></sup><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -s 640x480 -i test.yuv aa.jpeg  <span class="hljs-comment">#(错误代码)</span><br>ffmpeg -y -s:v 640x480 -pix_fmt yuyv422 -i test.yuv result.jpg  <span class="hljs-comment">#(正确代码)</span><br></code></pre></td></tr></table></figure></li></ol><p>还有一段命令也是我找到的，但我没试过可行性同时也忘了记录来源:</p><blockquote><p>ffmpeg -s 640x480 -i bbb.yuv -ss 00:00:00 -c:v libx264 -s:v 640x480 -preset slow -t 00:08:20 output.mp4</p></blockquote><h2 id="创建内存盘部分"><a href="#创建内存盘部分" class="headerlink" title="创建内存盘部分"></a>创建内存盘部分</h2><h3 id="信息挖掘"><a href="#信息挖掘" class="headerlink" title="信息挖掘"></a>信息挖掘</h3><p>随后上网寻找创建内存盘的方法，参考了如下几个网站的内容</p><blockquote><ol><li><a href="https://zhuanlan.zhihu.com/p/67170890">https://zhuanlan.zhihu.com/p/67170890</a></li><li><a href="https://www.linuxdashen.com/%E4%B8%BA%E4%BD%A0%E7%9A%84linux%E7%B3%BB%E7%BB%9F%E5%88%9B%E5%BB%BAram-disk">https://www.linuxdashen.com/%E4%B8%BA%E4%BD%A0%E7%9A%84linux%E7%B3%BB%E7%BB%9F%E5%88%9B%E5%BB%BAram-disk</a></li><li><a href="https://cloud.tencent.com/developer/article/1767470">https://cloud.tencent.com/developer/article/1767470</a></li></ol></blockquote><h3 id="实际执行-3-4"><a href="#实际执行-3-4" class="headerlink" title="实际执行[3][4]"></a>实际执行<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://unix.stackexchange.com/questions/26364/how-can-i-create-a-tmpfs-as-a-regular-non-root-user">[3]</span></a></sup><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://superuser.com/questions/389500/how-can-i-mount-a-tmpfs-without-root">[4]</span></a></sup></h3><p>创建内存盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkdir /dev/shm/user.camcap_cache <span class="hljs-comment">#创建内存盘</span><br>ln -s /dev/shm/user.camcap_cache ./cache <span class="hljs-comment">#在当前目录下创建软链接方便使用</span><br></code></pre></td></tr></table></figure><h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><p>然后我写了个shell脚本，越写越上头，不负责任的说这是我写过最美的代码。<br>需要安装v4l2和ffmpeg，其他什么都不要，奏似这么轻量。<br>扩展阅读</p><blockquote><p><a href="https://chtseng.wordpress.com/2022/07/18/%E4%BD%BF%E7%94%A8v4l2-ctl%E8%AA%BF%E6%95%B4-usb-camera%E5%8F%83%E6%95%B8/">https://chtseng.wordpress.com/2022/07/18/使用v4l2-ctl調整-usb-camera參數/</a><br><a href="http://zhaoxuhui.top/blog/2021/09/23/v4l2-introduction-and-usb-camera-bayer-raw-data.html">http://zhaoxuhui.top/blog/2021/09/23/v4l2-introduction-and-usb-camera-bayer-raw-data.html</a><br><a href="https://silencewt.github.io/2015/04/29/v4l2%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%BB%BA%E8%AE%AE%E5%92%8C%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/">https://silencewt.github.io/2015/04/29/v4l2的学习建议和流程解析/</a></p></blockquote><h2 id="脚本及执行方法"><a href="#脚本及执行方法" class="headerlink" title="脚本及执行方法"></a>脚本及执行方法</h2><p>例:复制到capcam.sh中</p><ol><li>chmod +x capcam.sh</li><li>执行./capcam.sh</li><li>结束</li><li>另外，./capcam.sh clean清理目录，./capcam.sh mod手动定义捕获参数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<span class="hljs-comment">#移植时无需移植</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a = os.popen(<span class="hljs-string">&#x27;./capcam.sh&#x27;</span>)<br>    time.sleep(<span class="hljs-number">1</span>)<span class="hljs-comment">#移植时无需移植</span><br>    <span class="hljs-comment">#print(a.read())</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-comment">#补充 文件使用：./[文件名].sh clean，如./v4l2test.sh clean 清理文件；./v4l2test.sh mod 修改volatile变量</span><br>ROM_CAPTURE_PATH=<span class="hljs-string">&quot;./rom_camcache&quot;</span><span class="hljs-comment">#数据暂存路径，SELECT_CACHE_LOC值选择实际数据存放的位置</span><br>SELECT_CACHE_LOC=0<span class="hljs-comment">#可选值0 or 1，0:选择内存盘；1:选择ROM_CAPTURE_PATH指定地址</span><br>RAM_DIR_NAME=<span class="hljs-string">&quot;user.camcap_cache&quot;</span><span class="hljs-comment">#RAM临时文件文件名</span><br>IS_HARDCODE=1<span class="hljs-comment">#值为1时使用程序中硬编码的摄像头捕获参数</span><br><span class="hljs-comment">###Volatile parameter</span><br>DEVICE_LOC=2<br>CAP_WIDTH=2560<br>CAP_HEIGHT=720<br>CAP_PIXFMT=MJPG<br>CAP_SUFFIX=jpeg <span class="hljs-comment">#jpeg/raw depends on CAP_PIXFMT is MJPEG/YUYV etc.此处需要修改！！我后来发现如果是仅YUYV的摄像头而这里还是jpeg就会报错没有找到raw文件</span><br><span class="hljs-comment">###</span><br>PIX_FMT_FFMPEG=<span class="hljs-string">&quot;yuyv422&quot;</span> <span class="hljs-comment">#ffmpeg需要原像素格式的信息，我的设备只有这一种，所以我的代码就不对其他格式适配了。</span><br><span class="hljs-comment">#摄像头初始化处也需要制定像素格式，但是参数拼写不一样，需要进一步完善代码可以从这里做起。</span><br>start=`date +%s.%N`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;\nROM_CAPTURE_PATH=<span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span>\t#数据暂存路径，SELECT_CACHE_LOC值选择实际数据存放的位置\nSELECT_CACHE_LOC=<span class="hljs-variable">$&#123;SELECT_CACHE_LOC&#125;</span>\t#可选值0 or 1，0:选择内存盘；1:选择ROM_CAPTURE_PATH指定地址\nRAM_DIR_NAME=<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>\t\t#RAM临时文件文件名\nIS_HARDCODE=<span class="hljs-variable">$&#123;IS_HARDCODE&#125;</span>\t\t#值为1时使用程序中硬编码的摄像头捕获参数\n###Volatile parameter###\nDEVICE_LOC=<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span>\nCAP_WIDTH=<span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>\nCAP_HEIGHT=<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span>\nCAP_PIXFMT=<span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span>\n###\nPIX_FMT_FFMPEG=<span class="hljs-variable">$&#123;PIX_FMT_FFMPEG&#125;</span>&quot;</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;clean&quot;</span> ]<br><span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Cleaning the dir in RAM:&quot;</span><br>rm -ir /dev/shm/<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Cleaning the link to the dir in RAM:&quot;</span><br>rm <span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Cleaning the dir in ROM:&quot;</span><br>rm -ir <span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Process Done.&quot;</span><br><span class="hljs-built_in">return</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;mod&quot;</span> ]<br><span class="hljs-keyword">then</span><br>IS_HARDCODE=0<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;SELECT_CACHE_LOC&#125;</span> -eq 0 ] <span class="hljs-comment">#选择内存盘</span><br><span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;creating RAM disk&quot;</span><br><span class="hljs-keyword">if</span> [ ! -d /dev/shm/<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span> ]<br><span class="hljs-keyword">then</span><br>mkdir /dev/shm/<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span> <span class="hljs-comment">#创建内存盘，需要确认df -h显示/dev/shm挂载方式为tmpfs</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ ! -d ./<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link ]<br><span class="hljs-keyword">then</span><br>ln -s /dev/shm/<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span> ./<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link <span class="hljs-comment">#在当前目录下创建软链接方便使用</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span> <span class="hljs-comment">#选择ROM_CAPTURE_PATH指定地址</span><br><span class="hljs-keyword">if</span> [ ! -d ./<span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span> ]<br><span class="hljs-keyword">then</span><br>mkdir <span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br>v4l2-ctl --list-devices <span class="hljs-comment">#显示当前连接的摄像头设备</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;IS_HARDCODE&#125;</span> -eq 1 ]<br><span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;using the hardcode now&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Choose:/dev/video<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;resolution:<span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>x<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span> in <span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span>&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br>DEVICE_LOC=<span class="hljs-variable">$2</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;选择设备(格式:若选择/dev/video0，则输入0。没有检查输入所以自己注意):&quot;</span><br><span class="hljs-built_in">read</span> DEVICE_LOC<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Choose:/dev/video<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;在如下信息中选择摄像头参数&quot;</span><br>v4l2-ctl -d<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span> --list-formats-ext <span class="hljs-comment">#注意⚠️返回值写着摄像头支持的所有输出模式，如YUYV</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$3</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br>CAP_WIDTH=<span class="hljs-variable">$3</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;请输入捕捉宽度&quot;</span><br><span class="hljs-built_in">read</span> CAP_WIDTH<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$4</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br>CAP_HEIGHT=<span class="hljs-variable">$4</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;请输入捕捉高度&quot;</span><br><span class="hljs-built_in">read</span> CAP_HEIGHT<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$5</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br>CAP_PIXFMT=<span class="hljs-variable">$5</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;请输入像素格式&quot;</span><br><span class="hljs-built_in">read</span> CAP_PIXFMT<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span> = <span class="hljs-string">&quot;YUYV&quot;</span> ] <span class="hljs-comment">#捕获格式不为YUYV时不进行转码</span><br><span class="hljs-keyword">then</span><br>CAP_SUFFIX=raw <span class="hljs-comment">#为之前出现的bug作修补即前面volatile的警告</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;SELECT_CACHE_LOC&#125;</span> -eq 0 ] <span class="hljs-comment">#选择内存盘</span><br><span class="hljs-keyword">then</span><br>v4l2-ctl --verbose \<br>-d<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span> \<br>--set-fmt-video=width=<span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>,height=<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span>,pixelformat=<span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span> \<br>--stream-mmap \<br>--stream-count=1 \<br>--stream-to=./<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link/output.<span class="hljs-variable">$&#123;CAP_SUFFIX&#125;</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span> = <span class="hljs-string">&quot;YUYV&quot;</span> ] <span class="hljs-comment">#捕获格式不为YUYV时不进行转码</span><br><span class="hljs-keyword">then</span><br>ffmpeg -y -s:v <span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>x<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span> -pix_fmt <span class="hljs-variable">$&#123;PIX_FMT_FFMPEG&#125;</span> -i ./<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link/output.raw ./<span class="hljs-variable">$&#123;RAM_DIR_NAME&#125;</span>_link/output.jpeg<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span> <span class="hljs-comment">#选择ROM_CAPTURE_PATH指定地址</span><br>v4l2-ctl --verbose \<br>-d<span class="hljs-variable">$&#123;DEVICE_LOC&#125;</span> \<br>--set-fmt-video=width=<span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>,height=<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span>,pixelformat=<span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span> \<br>--stream-mmap \<br>--stream-count=1 \<br>--stream-to=<span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span>/output.<span class="hljs-variable">$&#123;CAP_SUFFIX&#125;</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;CAP_PIXFMT&#125;</span> = <span class="hljs-string">&quot;YUYV&quot;</span> ] <span class="hljs-comment">#捕获格式不为YUYV时不进行转码</span><br><span class="hljs-keyword">then</span><br>ffmpeg -y -s:v <span class="hljs-variable">$&#123;CAP_WIDTH&#125;</span>x<span class="hljs-variable">$&#123;CAP_HEIGHT&#125;</span> -pix_fmt <span class="hljs-variable">$&#123;PIX_FMT_FFMPEG&#125;</span> -i <span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span>/output.raw <span class="hljs-variable">$&#123;ROM_CAPTURE_PATH&#125;</span>/output.jpeg<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br>end=`date +%s.%N`<br><span class="hljs-function"><span class="hljs-title">getTiming</span></span>()&#123; <span class="hljs-comment">#https://blog.csdn.net/bowenlaw/article/details/103789158</span><br>    start=<span class="hljs-variable">$1</span><br>    end=<span class="hljs-variable">$2</span>  <br>    start_s=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$start</span> | cut -d <span class="hljs-string">&#x27;.&#x27;</span> -f 1)<br>    start_ns=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$start</span> | cut -d <span class="hljs-string">&#x27;.&#x27;</span> -f 2)<br>    end_s=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$end</span> | cut -d <span class="hljs-string">&#x27;.&#x27;</span> -f 1)<br>    end_ns=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$end</span> | cut -d <span class="hljs-string">&#x27;.&#x27;</span> -f 2)<br>    time=`expr <span class="hljs-variable">$end_s</span> \* 1000 - <span class="hljs-variable">$start_s</span> \* 1000 + <span class="hljs-variable">$end_ns</span> / 1000000 - <span class="hljs-variable">$start_ns</span> / 1000000`<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$time</span> ms&quot;</span><br>&#125; <br>result=$(getTiming <span class="hljs-variable">$start</span> <span class="hljs-variable">$end</span>) <br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$result</span> <br></code></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/obsproject/obs-studio/blob/c5015d0e6cb180d138e1a9e2258afd903254b9ea/plugins/linux-v4l2/v4l2-input.c">https://github.com/obsproject/obs-studio/blob/c5015d0e6cb180d138e1a9e2258afd903254b9ea/plugins/linux-v4l2/v4l2-input.c</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://stackoverflow.com/questions/70961566/how-to-convert-raw-yuv-image-to-jpg">https://stackoverflow.com/questions/70961566/how-to-convert-raw-yuv-image-to-jpg</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://unix.stackexchange.com/questions/26364/how-can-i-create-a-tmpfs-as-a-regular-non-root-user">https://unix.stackexchange.com/questions/26364/how-can-i-create-a-tmpfs-as-a-regular-non-root-user</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://superuser.com/questions/389500/how-can-i-mount-a-tmpfs-without-root">https://superuser.com/questions/389500/how-can-i-mount-a-tmpfs-without-root</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">info: v4l2-input: /dev/video1 seems to not support video capture<br>info: v4l2-input: Found device <span class="hljs-string">&#x27;USB Camera: USB Camera&#x27;</span> at /dev/video0<br>info: v4l2-input: Start capture from /dev/video2<br>error: v4l2-input: Unable to open device<br>error: v4l2-input: Initialization failed, errno: 没有那个文件或目录<br>info: v4l2-input: Start capture from /dev/video0<br>info: v4l2-input: Input: 0<br>info: v4l2-input: Found input <span class="hljs-string">&#x27;Camera 1&#x27;</span> (Index 0)<br>info: v4l2-controls: setting default <span class="hljs-keyword">for</span> Power Line Frequency to 2<br>info: v4l2-input: Pixelformat: YUYV 4:2:2 (available)<br>info: v4l2-input: Pixelformat: RGB3 (Emulated) (unavailable)<br>info: v4l2-input: Pixelformat: BGR3 (Emulated) (available)<br>info: v4l2-input: Pixelformat: YU12 (Emulated) (available)<br>info: v4l2-input: Pixelformat: YV12 (Emulated) (available)<br>info: v4l2-input: Stepwise and Continuous framesizes are currently hardcoded<br>info: v4l2-input: Resolution: 640x480<br>info: v4l2-input: Pixelformat: YUYV<br>info: v4l2-input: Linesize: 1280 Bytes<br>info: v4l2-input: Framerate: 30.00 fps<br>info: v4l2-input: /dev/video0: select timeout <span class="hljs-built_in">set</span> to 166666 (5x frame periods)<br></code></pre></td></tr></table></figure><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="http://zhaoxuhui.top/blog/2021/09/23/v4l2-introduction-and-usb-camera-bayer-raw-data.html">http://zhaoxuhui.top/blog/2021/09/23/v4l2-introduction-and-usb-camera-bayer-raw-data.html</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>嵌入式</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下充电阈值设置-dkms&amp;TLP</title>
    <link href="/2022/charge-thresholdOfLinux/"/>
    <url>/2022/charge-thresholdOfLinux/</url>
    
    <content type="html"><![CDATA[<h1 id="先放链接"><a href="#先放链接" class="headerlink" title="先放链接"></a>先放链接</h1><blockquote><p><a href="https://blog.csdn.net/dadoneo/article/details/6035661">https://blog.csdn.net/dadoneo/article/details/6035661</a><br><a href="https://cnzhx.net/blog/power-management-and-battery-threshold-in-linux-on-t470s/">https://cnzhx.net/blog/power-management-and-battery-threshold-in-linux-on-t470s/</a></p></blockquote><p>上面⬆️的大概只能在受支持的电脑上用，但这是我一开始了解所用的文章所以同时记录下来</p><blockquote><p>后来找到tlp，这也是up主“飞蚊话”介绍过的软件<br><a href="https://www.bwsl.wang/linux/11.html">https://www.bwsl.wang/linux/11.html</a></p></blockquote><blockquote><p>tlp关于充电阈值方面的QA非常多，可以输入tlp-stat -b检查阈值是否生效，但我这部电脑不支持，就不继续深入了解了<br><a href="https://linrunner.de/tlp/faq/battery.html#how-do-battery-charge-thresholds-work">https://linrunner.de/tlp/faq/battery.html#how-do-battery-charge-thresholds-work</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>日常</category>
      
      <category>嵌入式</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub的MarkDown渲染支持的emoji标签</title>
    <link href="/2022/emoji-tag/"/>
    <url>/2022/emoji-tag/</url>
    
    <content type="html"><![CDATA[<h1 id="批注"><a href="#批注" class="headerlink" title="批注"></a>批注</h1><p>该文章来自:<a href="https://gist.github.com/rxaviers/7360908">https://gist.github.com/rxaviers/7360908</a><br>但是我的博客现在还暂时不支持这种渲染。</p><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>People</p><table><thead><tr><th>:bowtie: <code>:bowtie:</code></th><th>:smile: <code>:smile:</code></th><th>:laughing: <code>:laughing:</code></th></tr></thead><tbody><tr><td>:blush: <code>:blush:</code></td><td>:smiley: <code>:smiley:</code></td><td>:relaxed: <code>:relaxed:</code></td></tr><tr><td>:smirk: <code>:smirk:</code></td><td>:heart_eyes: <code>:heart_eyes:</code></td><td>:kissing_heart: <code>:kissing_heart:</code></td></tr><tr><td>:kissing_closed_eyes: <code>:kissing_closed_eyes:</code></td><td>:flushed: <code>:flushed:</code></td><td>:relieved: <code>:relieved:</code></td></tr><tr><td>:satisfied: <code>:satisfied:</code></td><td>:grin: <code>:grin:</code></td><td>:wink: <code>:wink:</code></td></tr><tr><td>:stuck_out_tongue_winking_eye: <code>:stuck_out_tongue_winking_eye:</code></td><td>:stuck_out_tongue_closed_eyes: <code>:stuck_out_tongue_closed_eyes:</code></td><td>:grinning: <code>:grinning:</code></td></tr><tr><td>:kissing: <code>:kissing:</code></td><td>:kissing_smiling_eyes: <code>:kissing_smiling_eyes:</code></td><td>:stuck_out_tongue: <code>:stuck_out_tongue:</code></td></tr><tr><td>:sleeping: <code>:sleeping:</code></td><td>:worried: <code>:worried:</code></td><td>:frowning: <code>:frowning:</code></td></tr><tr><td>:anguished: <code>:anguished:</code></td><td>:open_mouth: <code>:open_mouth:</code></td><td>:grimacing: <code>:grimacing:</code></td></tr><tr><td>:confused: <code>:confused:</code></td><td>:hushed: <code>:hushed:</code></td><td>:expressionless: <code>:expressionless:</code></td></tr><tr><td>:unamused: <code>:unamused:</code></td><td>:sweat_smile: <code>:sweat_smile:</code></td><td>:sweat: <code>:sweat:</code></td></tr><tr><td>:disappointed_relieved: <code>:disappointed_relieved:</code></td><td>:weary: <code>:weary:</code></td><td>:pensive: <code>:pensive:</code></td></tr><tr><td>:disappointed: <code>:disappointed:</code></td><td>:confounded: <code>:confounded:</code></td><td>:fearful: <code>:fearful:</code></td></tr><tr><td>:cold_sweat: <code>:cold_sweat:</code></td><td>:persevere: <code>:persevere:</code></td><td>:cry: <code>:cry:</code></td></tr><tr><td>:sob: <code>:sob:</code></td><td>:joy: <code>:joy:</code></td><td>:astonished: <code>:astonished:</code></td></tr><tr><td>:scream: <code>:scream:</code></td><td>:neckbeard: <code>:neckbeard:</code></td><td>:tired_face: <code>:tired_face:</code></td></tr><tr><td>:angry: <code>:angry:</code></td><td>:rage: <code>:rage:</code></td><td>:triumph: <code>:triumph:</code></td></tr><tr><td>:sleepy: <code>:sleepy:</code></td><td>:yum: <code>:yum:</code></td><td>:mask: <code>:mask:</code></td></tr><tr><td>:sunglasses: <code>:sunglasses:</code></td><td>:dizzy_face: <code>:dizzy_face:</code></td><td>:imp: <code>:imp:</code></td></tr><tr><td>:smiling_imp: <code>:smiling_imp:</code></td><td>:neutral_face: <code>:neutral_face:</code></td><td>:no_mouth: <code>:no_mouth:</code></td></tr><tr><td>:innocent: <code>:innocent:</code></td><td>:alien: <code>:alien:</code></td><td>:yellow_heart: <code>:yellow_heart:</code></td></tr><tr><td>:blue_heart: <code>:blue_heart:</code></td><td>:purple_heart: <code>:purple_heart:</code></td><td>:heart: <code>:heart:</code></td></tr><tr><td>:green_heart: <code>:green_heart:</code></td><td>:broken_heart: <code>:broken_heart:</code></td><td>:heartbeat: <code>:heartbeat:</code></td></tr><tr><td>:heartpulse: <code>:heartpulse:</code></td><td>:two_hearts: <code>:two_hearts:</code></td><td>:revolving_hearts: <code>:revolving_hearts:</code></td></tr><tr><td>:cupid: <code>:cupid:</code></td><td>:sparkling_heart: <code>:sparkling_heart:</code></td><td>:sparkles: <code>:sparkles:</code></td></tr><tr><td>:star: <code>:star:</code></td><td>:star2: <code>:star2:</code></td><td>:dizzy: <code>:dizzy:</code></td></tr><tr><td>:boom: <code>:boom:</code></td><td>:collision: <code>:collision:</code></td><td>:anger: <code>:anger:</code></td></tr><tr><td>:exclamation: <code>:exclamation:</code></td><td>:question: <code>:question:</code></td><td>:grey_exclamation: <code>:grey_exclamation:</code></td></tr><tr><td>:grey_question: <code>:grey_question:</code></td><td>:zzz: <code>:zzz:</code></td><td>:dash: <code>:dash:</code></td></tr><tr><td>:sweat_drops: <code>:sweat_drops:</code></td><td>:notes: <code>:notes:</code></td><td>:musical_note: <code>:musical_note:</code></td></tr><tr><td>:fire: <code>:fire:</code></td><td>:hankey: <code>:hankey:</code></td><td>:poop: <code>:poop:</code></td></tr><tr><td>:shit: <code>:shit:</code></td><td>:+1: <code>:+1:</code></td><td>:thumbsup: <code>:thumbsup:</code></td></tr><tr><td>:-1: <code>:-1:</code></td><td>:thumbsdown: <code>:thumbsdown:</code></td><td>:ok_hand: <code>:ok_hand:</code></td></tr><tr><td>:punch: <code>:punch:</code></td><td>:facepunch: <code>:facepunch:</code></td><td>:fist: <code>:fist:</code></td></tr><tr><td>:v: <code>:v:</code></td><td>:wave: <code>:wave:</code></td><td>:hand: <code>:hand:</code></td></tr><tr><td>:raised_hand: <code>:raised_hand:</code></td><td>:open_hands: <code>:open_hands:</code></td><td>:point_up: <code>:point_up:</code></td></tr><tr><td>:point_down: <code>:point_down:</code></td><td>:point_left: <code>:point_left:</code></td><td>:point_right: <code>:point_right:</code></td></tr><tr><td>:raised_hands: <code>:raised_hands:</code></td><td>:pray: <code>:pray:</code></td><td>:point_up_2: <code>:point_up_2:</code></td></tr><tr><td>:clap: <code>:clap:</code></td><td>:muscle: <code>:muscle:</code></td><td>:metal: <code>:metal:</code></td></tr><tr><td>:fu: <code>:fu:</code></td><td>:walking: <code>:walking:</code></td><td>:runner: <code>:runner:</code></td></tr><tr><td>:running: <code>:running:</code></td><td>:couple: <code>:couple:</code></td><td>:family: <code>:family:</code></td></tr><tr><td>:two_men_holding_hands: <code>:two_men_holding_hands:</code></td><td>:two_women_holding_hands: <code>:two_women_holding_hands:</code></td><td>:dancer: <code>:dancer:</code></td></tr><tr><td>:dancers: <code>:dancers:</code></td><td>:ok_woman: <code>:ok_woman:</code></td><td>:no_good: <code>:no_good:</code></td></tr><tr><td>:information_desk_person: <code>:information_desk_person:</code></td><td>:raising_hand: <code>:raising_hand:</code></td><td>:bride_with_veil: <code>:bride_with_veil:</code></td></tr><tr><td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td><td>:person_frowning: <code>:person_frowning:</code></td><td>:bow: <code>:bow:</code></td></tr><tr><td>:couplekiss: <code>:couplekiss:</code></td><td>:couple_with_heart: <code>:couple_with_heart:</code></td><td>:massage: <code>:massage:</code></td></tr><tr><td>:haircut: <code>:haircut:</code></td><td>:nail_care: <code>:nail_care:</code></td><td>:boy: <code>:boy:</code></td></tr><tr><td>:girl: <code>:girl:</code></td><td>:woman: <code>:woman:</code></td><td>:man: <code>:man:</code></td></tr><tr><td>:baby: <code>:baby:</code></td><td>:older_woman: <code>:older_woman:</code></td><td>:older_man: <code>:older_man:</code></td></tr><tr><td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td><td>:man_with_gua_pi_mao: <code>:man_with_gua_pi_mao:</code></td><td>:man_with_turban: <code>:man_with_turban:</code></td></tr><tr><td>:construction_worker: <code>:construction_worker:</code></td><td>:cop: <code>:cop:</code></td><td>:angel: <code>:angel:</code></td></tr><tr><td>:princess: <code>:princess:</code></td><td>:smiley_cat: <code>:smiley_cat:</code></td><td>:smile_cat: <code>:smile_cat:</code></td></tr><tr><td>:heart_eyes_cat: <code>:heart_eyes_cat:</code></td><td>:kissing_cat: <code>:kissing_cat:</code></td><td>:smirk_cat: <code>:smirk_cat:</code></td></tr><tr><td>:scream_cat: <code>:scream_cat:</code></td><td>:crying_cat_face: <code>:crying_cat_face:</code></td><td>:joy_cat: <code>:joy_cat:</code></td></tr><tr><td>:pouting_cat: <code>:pouting_cat:</code></td><td>:japanese_ogre: <code>:japanese_ogre:</code></td><td>:japanese_goblin: <code>:japanese_goblin:</code></td></tr><tr><td>:see_no_evil: <code>:see_no_evil:</code></td><td>:hear_no_evil: <code>:hear_no_evil:</code></td><td>:speak_no_evil: <code>:speak_no_evil:</code></td></tr><tr><td>:guardsman: <code>:guardsman:</code></td><td>:skull: <code>:skull:</code></td><td>:feet: <code>:feet:</code></td></tr><tr><td>:lips: <code>:lips:</code></td><td>:kiss: <code>:kiss:</code></td><td>:droplet: <code>:droplet:</code></td></tr><tr><td>:ear: <code>:ear:</code></td><td>:eyes: <code>:eyes:</code></td><td>:nose: <code>:nose:</code></td></tr><tr><td>:tongue: <code>:tongue:</code></td><td>:love_letter: <code>:love_letter:</code></td><td>:bust_in_silhouette: <code>:bust_in_silhouette:</code></td></tr><tr><td>:busts_in_silhouette: <code>:busts_in_silhouette:</code></td><td>:speech_balloon: <code>:speech_balloon:</code></td><td>:thought_balloon: <code>:thought_balloon:</code></td></tr><tr><td>:feelsgood: <code>:feelsgood:</code></td><td>:finnadie: <code>:finnadie:</code></td><td>:goberserk: <code>:goberserk:</code></td></tr><tr><td>:godmode: <code>:godmode:</code></td><td>:hurtrealbad: <code>:hurtrealbad:</code></td><td>:rage1: <code>:rage1:</code></td></tr><tr><td>:rage2: <code>:rage2:</code></td><td>:rage3: <code>:rage3:</code></td><td>:rage4: <code>:rage4:</code></td></tr><tr><td>:suspect: <code>:suspect:</code></td><td>:trollface: <code>:trollface:</code></td><td></td></tr></tbody></table><p>Nature</p><table><thead><tr><th>:sunny: <code>:sunny:</code></th><th>:umbrella: <code>:umbrella:</code></th><th>:cloud: <code>:cloud:</code></th></tr></thead><tbody><tr><td>:snowflake: <code>:snowflake:</code></td><td>:snowman: <code>:snowman:</code></td><td>:zap: <code>:zap:</code></td></tr><tr><td>:cyclone: <code>:cyclone:</code></td><td>:foggy: <code>:foggy:</code></td><td>:ocean: <code>:ocean:</code></td></tr><tr><td>:cat: <code>:cat:</code></td><td>:dog: <code>:dog:</code></td><td>:mouse: <code>:mouse:</code></td></tr><tr><td>:hamster: <code>:hamster:</code></td><td>:rabbit: <code>:rabbit:</code></td><td>:wolf: <code>:wolf:</code></td></tr><tr><td>:frog: <code>:frog:</code></td><td>:tiger: <code>:tiger:</code></td><td>:koala: <code>:koala:</code></td></tr><tr><td>:bear: <code>:bear:</code></td><td>:pig: <code>:pig:</code></td><td>:pig_nose: <code>:pig_nose:</code></td></tr><tr><td>:cow: <code>:cow:</code></td><td>:boar: <code>:boar:</code></td><td>:monkey_face: <code>:monkey_face:</code></td></tr><tr><td>:monkey: <code>:monkey:</code></td><td>:horse: <code>:horse:</code></td><td>:racehorse: <code>:racehorse:</code></td></tr><tr><td>:camel: <code>:camel:</code></td><td>:sheep: <code>:sheep:</code></td><td>:elephant: <code>:elephant:</code></td></tr><tr><td>:panda_face: <code>:panda_face:</code></td><td>:snake: <code>:snake:</code></td><td>:bird: <code>:bird:</code></td></tr><tr><td>:baby_chick: <code>:baby_chick:</code></td><td>:hatched_chick: <code>:hatched_chick:</code></td><td>:hatching_chick: <code>:hatching_chick:</code></td></tr><tr><td>:chicken: <code>:chicken:</code></td><td>:penguin: <code>:penguin:</code></td><td>:turtle: <code>:turtle:</code></td></tr><tr><td>:bug: <code>:bug:</code></td><td>:honeybee: <code>:honeybee:</code></td><td>:ant: <code>:ant:</code></td></tr><tr><td>:beetle: <code>:beetle:</code></td><td>:snail: <code>:snail:</code></td><td>:octopus: <code>:octopus:</code></td></tr><tr><td>:tropical_fish: <code>:tropical_fish:</code></td><td>:fish: <code>:fish:</code></td><td>:whale: <code>:whale:</code></td></tr><tr><td>:whale2: <code>:whale2:</code></td><td>:dolphin: <code>:dolphin:</code></td><td>:cow2: <code>:cow2:</code></td></tr><tr><td>:ram: <code>:ram:</code></td><td>:rat: <code>:rat:</code></td><td>:water_buffalo: <code>:water_buffalo:</code></td></tr><tr><td>:tiger2: <code>:tiger2:</code></td><td>:rabbit2: <code>:rabbit2:</code></td><td>:dragon: <code>:dragon:</code></td></tr><tr><td>:goat: <code>:goat:</code></td><td>:rooster: <code>:rooster:</code></td><td>:dog2: <code>:dog2:</code></td></tr><tr><td>:pig2: <code>:pig2:</code></td><td>:mouse2: <code>:mouse2:</code></td><td>:ox: <code>:ox:</code></td></tr><tr><td>:dragon_face: <code>:dragon_face:</code></td><td>:blowfish: <code>:blowfish:</code></td><td>:crocodile: <code>:crocodile:</code></td></tr><tr><td>:dromedary_camel: <code>:dromedary_camel:</code></td><td>:leopard: <code>:leopard:</code></td><td>:cat2: <code>:cat2:</code></td></tr><tr><td>:poodle: <code>:poodle:</code></td><td>:paw_prints: <code>:paw_prints:</code></td><td>:bouquet: <code>:bouquet:</code></td></tr><tr><td>:cherry_blossom: <code>:cherry_blossom:</code></td><td>:tulip: <code>:tulip:</code></td><td>:four_leaf_clover: <code>:four_leaf_clover:</code></td></tr><tr><td>:rose: <code>:rose:</code></td><td>:sunflower: <code>:sunflower:</code></td><td>:hibiscus: <code>:hibiscus:</code></td></tr><tr><td>:maple_leaf: <code>:maple_leaf:</code></td><td>:leaves: <code>:leaves:</code></td><td>:fallen_leaf: <code>:fallen_leaf:</code></td></tr><tr><td>:herb: <code>:herb:</code></td><td>:mushroom: <code>:mushroom:</code></td><td>:cactus: <code>:cactus:</code></td></tr><tr><td>:palm_tree: <code>:palm_tree:</code></td><td>:evergreen_tree: <code>:evergreen_tree:</code></td><td>:deciduous_tree: <code>:deciduous_tree:</code></td></tr><tr><td>:chestnut: <code>:chestnut:</code></td><td>:seedling: <code>:seedling:</code></td><td>:blossom: <code>:blossom:</code></td></tr><tr><td>:ear_of_rice: <code>:ear_of_rice:</code></td><td>:shell: <code>:shell:</code></td><td>:globe_with_meridians: <code>:globe_with_meridians:</code></td></tr><tr><td>:sun_with_face: <code>:sun_with_face:</code></td><td>:full_moon_with_face: <code>:full_moon_with_face:</code></td><td>:new_moon_with_face: <code>:new_moon_with_face:</code></td></tr><tr><td>:new_moon: <code>:new_moon:</code></td><td>:waxing_crescent_moon: <code>:waxing_crescent_moon:</code></td><td>:first_quarter_moon: <code>:first_quarter_moon:</code></td></tr><tr><td>:waxing_gibbous_moon: <code>:waxing_gibbous_moon:</code></td><td>:full_moon: <code>:full_moon:</code></td><td>:waning_gibbous_moon: <code>:waning_gibbous_moon:</code></td></tr><tr><td>:last_quarter_moon: <code>:last_quarter_moon:</code></td><td>:waning_crescent_moon: <code>:waning_crescent_moon:</code></td><td>:last_quarter_moon_with_face: <code>:last_quarter_moon_with_face:</code></td></tr><tr><td>:first_quarter_moon_with_face: <code>:first_quarter_moon_with_face:</code></td><td>:moon: <code>:moon:</code></td><td>:earth_africa: <code>:earth_africa:</code></td></tr><tr><td>:earth_americas: <code>:earth_americas:</code></td><td>:earth_asia: <code>:earth_asia:</code></td><td>:volcano: <code>:volcano:</code></td></tr><tr><td>:milky_way: <code>:milky_way:</code></td><td>:partly_sunny: <code>:partly_sunny:</code></td><td>:octocat: <code>:octocat:</code></td></tr><tr><td>:squirrel: <code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><p>Objects</p><table><thead><tr><th>:bamboo: <code>:bamboo:</code></th><th>:gift_heart: <code>:gift_heart:</code></th><th>:dolls: <code>:dolls:</code></th></tr></thead><tbody><tr><td>:school_satchel: <code>:school_satchel:</code></td><td>:mortar_board: <code>:mortar_board:</code></td><td>:flags: <code>:flags:</code></td></tr><tr><td>:fireworks: <code>:fireworks:</code></td><td>:sparkler: <code>:sparkler:</code></td><td>:wind_chime: <code>:wind_chime:</code></td></tr><tr><td>:rice_scene: <code>:rice_scene:</code></td><td>:jack_o_lantern: <code>:jack_o_lantern:</code></td><td>:ghost: <code>:ghost:</code></td></tr><tr><td>:santa: <code>:santa:</code></td><td>:christmas_tree: <code>:christmas_tree:</code></td><td>:gift: <code>:gift:</code></td></tr><tr><td>:bell: <code>:bell:</code></td><td>:no_bell: <code>:no_bell:</code></td><td>:tanabata_tree: <code>:tanabata_tree:</code></td></tr><tr><td>:tada: <code>:tada:</code></td><td>:confetti_ball: <code>:confetti_ball:</code></td><td>:balloon: <code>:balloon:</code></td></tr><tr><td>:crystal_ball: <code>:crystal_ball:</code></td><td>:cd: <code>:cd:</code></td><td>:dvd: <code>:dvd:</code></td></tr><tr><td>:floppy_disk: <code>:floppy_disk:</code></td><td>:camera: <code>:camera:</code></td><td>:video_camera: <code>:video_camera:</code></td></tr><tr><td>:movie_camera: <code>:movie_camera:</code></td><td>:computer: <code>:computer:</code></td><td>:tv: <code>:tv:</code></td></tr><tr><td>:iphone: <code>:iphone:</code></td><td>:phone: <code>:phone:</code></td><td>:telephone: <code>:telephone:</code></td></tr><tr><td>:telephone_receiver: <code>:telephone_receiver:</code></td><td>:pager: <code>:pager:</code></td><td>:fax: <code>:fax:</code></td></tr><tr><td>:minidisc: <code>:minidisc:</code></td><td>:vhs: <code>:vhs:</code></td><td>:sound: <code>:sound:</code></td></tr><tr><td>:speaker: <code>:speaker:</code></td><td>:mute: <code>:mute:</code></td><td>:loudspeaker: <code>:loudspeaker:</code></td></tr><tr><td>:mega: <code>:mega:</code></td><td>:hourglass: <code>:hourglass:</code></td><td>:hourglass_flowing_sand: <code>:hourglass_flowing_sand:</code></td></tr><tr><td>:alarm_clock: <code>:alarm_clock:</code></td><td>:watch: <code>:watch:</code></td><td>:radio: <code>:radio:</code></td></tr><tr><td>:satellite: <code>:satellite:</code></td><td>:loop: <code>:loop:</code></td><td>:mag: <code>:mag:</code></td></tr><tr><td>:mag_right: <code>:mag_right:</code></td><td>:unlock: <code>:unlock:</code></td><td>:lock: <code>:lock:</code></td></tr><tr><td>:lock_with_ink_pen: <code>:lock_with_ink_pen:</code></td><td>:closed_lock_with_key: <code>:closed_lock_with_key:</code></td><td>:key: <code>:key:</code></td></tr><tr><td>:bulb: <code>:bulb:</code></td><td>:flashlight: <code>:flashlight:</code></td><td>:high_brightness: <code>:high_brightness:</code></td></tr><tr><td>:low_brightness: <code>:low_brightness:</code></td><td>:electric_plug: <code>:electric_plug:</code></td><td>:battery: <code>:battery:</code></td></tr><tr><td>:calling: <code>:calling:</code></td><td>:email: <code>:email:</code></td><td>:mailbox: <code>:mailbox:</code></td></tr><tr><td>:postbox: <code>:postbox:</code></td><td>:bath: <code>:bath:</code></td><td>:bathtub: <code>:bathtub:</code></td></tr><tr><td>:shower: <code>:shower:</code></td><td>:toilet: <code>:toilet:</code></td><td>:wrench: <code>:wrench:</code></td></tr><tr><td>:nut_and_bolt: <code>:nut_and_bolt:</code></td><td>:hammer: <code>:hammer:</code></td><td>:seat: <code>:seat:</code></td></tr><tr><td>:moneybag: <code>:moneybag:</code></td><td>:yen: <code>:yen:</code></td><td>:dollar: <code>:dollar:</code></td></tr><tr><td>:pound: <code>:pound:</code></td><td>:euro: <code>:euro:</code></td><td>:credit_card: <code>:credit_card:</code></td></tr><tr><td>:money_with_wings: <code>:money_with_wings:</code></td><td>:e-mail: <code>:e-mail:</code></td><td>:inbox_tray: <code>:inbox_tray:</code></td></tr><tr><td>:outbox_tray: <code>:outbox_tray:</code></td><td>:envelope: <code>:envelope:</code></td><td>:incoming_envelope: <code>:incoming_envelope:</code></td></tr><tr><td>:postal_horn: <code>:postal_horn:</code></td><td>:mailbox_closed: <code>:mailbox_closed:</code></td><td>:mailbox_with_mail: <code>:mailbox_with_mail:</code></td></tr><tr><td>:mailbox_with_no_mail: <code>:mailbox_with_no_mail:</code></td><td>:door: <code>:door:</code></td><td>:smoking: <code>:smoking:</code></td></tr><tr><td>:bomb: <code>:bomb:</code></td><td>:gun: <code>:gun:</code></td><td>:hocho: <code>:hocho:</code></td></tr><tr><td>:pill: <code>:pill:</code></td><td>:syringe: <code>:syringe:</code></td><td>:page_facing_up: <code>:page_facing_up:</code></td></tr><tr><td>:page_with_curl: <code>:page_with_curl:</code></td><td>:bookmark_tabs: <code>:bookmark_tabs:</code></td><td>:bar_chart: <code>:bar_chart:</code></td></tr><tr><td>:chart_with_upwards_trend: <code>:chart_with_upwards_trend:</code></td><td>:chart_with_downwards_trend: <code>:chart_with_downwards_trend:</code></td><td>:scroll: <code>:scroll:</code></td></tr><tr><td>:clipboard: <code>:clipboard:</code></td><td>:calendar: <code>:calendar:</code></td><td>:date: <code>:date:</code></td></tr><tr><td>:card_index: <code>:card_index:</code></td><td>:file_folder: <code>:file_folder:</code></td><td>:open_file_folder: <code>:open_file_folder:</code></td></tr><tr><td>:scissors: <code>:scissors:</code></td><td>:pushpin: <code>:pushpin:</code></td><td>:paperclip: <code>:paperclip:</code></td></tr><tr><td>:black_nib: <code>:black_nib:</code></td><td>:pencil2: <code>:pencil2:</code></td><td>:straight_ruler: <code>:straight_ruler:</code></td></tr><tr><td>:triangular_ruler: <code>:triangular_ruler:</code></td><td>:closed_book: <code>:closed_book:</code></td><td>:green_book: <code>:green_book:</code></td></tr><tr><td>:blue_book: <code>:blue_book:</code></td><td>:orange_book: <code>:orange_book:</code></td><td>:notebook: <code>:notebook:</code></td></tr><tr><td>:notebook_with_decorative_cover: <code>:notebook_with_decorative_cover:</code></td><td>:ledger: <code>:ledger:</code></td><td>:books: <code>:books:</code></td></tr><tr><td>:bookmark: <code>:bookmark:</code></td><td>:name_badge: <code>:name_badge:</code></td><td>:microscope: <code>:microscope:</code></td></tr><tr><td>:telescope: <code>:telescope:</code></td><td>:newspaper: <code>:newspaper:</code></td><td>:football: <code>:football:</code></td></tr><tr><td>:basketball: <code>:basketball:</code></td><td>:soccer: <code>:soccer:</code></td><td>:baseball: <code>:baseball:</code></td></tr><tr><td>:tennis: <code>:tennis:</code></td><td>:8ball: <code>:8ball:</code></td><td>:rugby_football: <code>:rugby_football:</code></td></tr><tr><td>:bowling: <code>:bowling:</code></td><td>:golf: <code>:golf:</code></td><td>:mountain_bicyclist: <code>:mountain_bicyclist:</code></td></tr><tr><td>:bicyclist: <code>:bicyclist:</code></td><td>:horse_racing: <code>:horse_racing:</code></td><td>:snowboarder: <code>:snowboarder:</code></td></tr><tr><td>:swimmer: <code>:swimmer:</code></td><td>:surfer: <code>:surfer:</code></td><td>:ski: <code>:ski:</code></td></tr><tr><td>:spades: <code>:spades:</code></td><td>:hearts: <code>:hearts:</code></td><td>:clubs: <code>:clubs:</code></td></tr><tr><td>:diamonds: <code>:diamonds:</code></td><td>:gem: <code>:gem:</code></td><td>:ring: <code>:ring:</code></td></tr><tr><td>:trophy: <code>:trophy:</code></td><td>:musical_score: <code>:musical_score:</code></td><td>:musical_keyboard: <code>:musical_keyboard:</code></td></tr><tr><td>:violin: <code>:violin:</code></td><td>:space_invader: <code>:space_invader:</code></td><td>:video_game: <code>:video_game:</code></td></tr><tr><td>:black_joker: <code>:black_joker:</code></td><td>:flower_playing_cards: <code>:flower_playing_cards:</code></td><td>:game_die: <code>:game_die:</code></td></tr><tr><td>:dart: <code>:dart:</code></td><td>:mahjong: <code>:mahjong:</code></td><td>:clapper: <code>:clapper:</code></td></tr><tr><td>:memo: <code>:memo:</code></td><td>:pencil: <code>:pencil:</code></td><td>:book: <code>:book:</code></td></tr><tr><td>:art: <code>:art:</code></td><td>:microphone: <code>:microphone:</code></td><td>:headphones: <code>:headphones:</code></td></tr><tr><td>:trumpet: <code>:trumpet:</code></td><td>:saxophone: <code>:saxophone:</code></td><td>:guitar: <code>:guitar:</code></td></tr><tr><td>:shoe: <code>:shoe:</code></td><td>:sandal: <code>:sandal:</code></td><td>:high_heel: <code>:high_heel:</code></td></tr><tr><td>:lipstick: <code>:lipstick:</code></td><td>:boot: <code>:boot:</code></td><td>:shirt: <code>:shirt:</code></td></tr><tr><td>:tshirt: <code>:tshirt:</code></td><td>:necktie: <code>:necktie:</code></td><td>:womans_clothes: <code>:womans_clothes:</code></td></tr><tr><td>:dress: <code>:dress:</code></td><td>:running_shirt_with_sash: <code>:running_shirt_with_sash:</code></td><td>:jeans: <code>:jeans:</code></td></tr><tr><td>:kimono: <code>:kimono:</code></td><td>:bikini: <code>:bikini:</code></td><td>:ribbon: <code>:ribbon:</code></td></tr><tr><td>:tophat: <code>:tophat:</code></td><td>:crown: <code>:crown:</code></td><td>:womans_hat: <code>:womans_hat:</code></td></tr><tr><td>:mans_shoe: <code>:mans_shoe:</code></td><td>:closed_umbrella: <code>:closed_umbrella:</code></td><td>:briefcase: <code>:briefcase:</code></td></tr><tr><td>:handbag: <code>:handbag:</code></td><td>:pouch: <code>:pouch:</code></td><td>:purse: <code>:purse:</code></td></tr><tr><td>:eyeglasses: <code>:eyeglasses:</code></td><td>:fishing_pole_and_fish: <code>:fishing_pole_and_fish:</code></td><td>:coffee: <code>:coffee:</code></td></tr><tr><td>:tea: <code>:tea:</code></td><td>:sake: <code>:sake:</code></td><td>:baby_bottle: <code>:baby_bottle:</code></td></tr><tr><td>:beer: <code>:beer:</code></td><td>:beers: <code>:beers:</code></td><td>:cocktail: <code>:cocktail:</code></td></tr><tr><td>:tropical_drink: <code>:tropical_drink:</code></td><td>:wine_glass: <code>:wine_glass:</code></td><td>:fork_and_knife: <code>:fork_and_knife:</code></td></tr><tr><td>:pizza: <code>:pizza:</code></td><td>:hamburger: <code>:hamburger:</code></td><td>:fries: <code>:fries:</code></td></tr><tr><td>:poultry_leg: <code>:poultry_leg:</code></td><td>:meat_on_bone: <code>:meat_on_bone:</code></td><td>:spaghetti: <code>:spaghetti:</code></td></tr><tr><td>:curry: <code>:curry:</code></td><td>:fried_shrimp: <code>:fried_shrimp:</code></td><td>:bento: <code>:bento:</code></td></tr><tr><td>:sushi: <code>:sushi:</code></td><td>:fish_cake: <code>:fish_cake:</code></td><td>:rice_ball: <code>:rice_ball:</code></td></tr><tr><td>:rice_cracker: <code>:rice_cracker:</code></td><td>:rice: <code>:rice:</code></td><td>:ramen: <code>:ramen:</code></td></tr><tr><td>:stew: <code>:stew:</code></td><td>:oden: <code>:oden:</code></td><td>:dango: <code>:dango:</code></td></tr><tr><td>:egg: <code>:egg:</code></td><td>:bread: <code>:bread:</code></td><td>:doughnut: <code>:doughnut:</code></td></tr><tr><td>:custard: <code>:custard:</code></td><td>:icecream: <code>:icecream:</code></td><td>:ice_cream: <code>:ice_cream:</code></td></tr><tr><td>:shaved_ice: <code>:shaved_ice:</code></td><td>:birthday: <code>:birthday:</code></td><td>:cake: <code>:cake:</code></td></tr><tr><td>:cookie: <code>:cookie:</code></td><td>:chocolate_bar: <code>:chocolate_bar:</code></td><td>:candy: <code>:candy:</code></td></tr><tr><td>:lollipop: <code>:lollipop:</code></td><td>:honey_pot: <code>:honey_pot:</code></td><td>:apple: <code>:apple:</code></td></tr><tr><td>:green_apple: <code>:green_apple:</code></td><td>:tangerine: <code>:tangerine:</code></td><td>:lemon: <code>:lemon:</code></td></tr><tr><td>:cherries: <code>:cherries:</code></td><td>:grapes: <code>:grapes:</code></td><td>:watermelon: <code>:watermelon:</code></td></tr><tr><td>:strawberry: <code>:strawberry:</code></td><td>:peach: <code>:peach:</code></td><td>:melon: <code>:melon:</code></td></tr><tr><td>:banana: <code>:banana:</code></td><td>:pear: <code>:pear:</code></td><td>:pineapple: <code>:pineapple:</code></td></tr><tr><td>:sweet_potato: <code>:sweet_potato:</code></td><td>:eggplant: <code>:eggplant:</code></td><td>:tomato: <code>:tomato:</code></td></tr><tr><td>:corn: <code>:corn:</code></td><td></td><td></td></tr></tbody></table><p>Places</p><table><thead><tr><th>:house: <code>:house:</code></th><th>:house_with_garden: <code>:house_with_garden:</code></th><th>:school: <code>:school:</code></th></tr></thead><tbody><tr><td>:office: <code>:office:</code></td><td>:post_office: <code>:post_office:</code></td><td>:hospital: <code>:hospital:</code></td></tr><tr><td>:bank: <code>:bank:</code></td><td>:convenience_store: <code>:convenience_store:</code></td><td>:love_hotel: <code>:love_hotel:</code></td></tr><tr><td>:hotel: <code>:hotel:</code></td><td>:wedding: <code>:wedding:</code></td><td>:church: <code>:church:</code></td></tr><tr><td>:department_store: <code>:department_store:</code></td><td>:european_post_office: <code>:european_post_office:</code></td><td>:city_sunrise: <code>:city_sunrise:</code></td></tr><tr><td>:city_sunset: <code>:city_sunset:</code></td><td>:japanese_castle: <code>:japanese_castle:</code></td><td>:european_castle: <code>:european_castle:</code></td></tr><tr><td>:tent: <code>:tent:</code></td><td>:factory: <code>:factory:</code></td><td>:tokyo_tower: <code>:tokyo_tower:</code></td></tr><tr><td>:japan: <code>:japan:</code></td><td>:mount_fuji: <code>:mount_fuji:</code></td><td>:sunrise_over_mountains: <code>:sunrise_over_mountains:</code></td></tr><tr><td>:sunrise: <code>:sunrise:</code></td><td>:stars: <code>:stars:</code></td><td>:statue_of_liberty: <code>:statue_of_liberty:</code></td></tr><tr><td>:bridge_at_night: <code>:bridge_at_night:</code></td><td>:carousel_horse: <code>:carousel_horse:</code></td><td>:rainbow: <code>:rainbow:</code></td></tr><tr><td>:ferris_wheel: <code>:ferris_wheel:</code></td><td>:fountain: <code>:fountain:</code></td><td>:roller_coaster: <code>:roller_coaster:</code></td></tr><tr><td>:ship: <code>:ship:</code></td><td>:speedboat: <code>:speedboat:</code></td><td>:boat: <code>:boat:</code></td></tr><tr><td>:sailboat: <code>:sailboat:</code></td><td>:rowboat: <code>:rowboat:</code></td><td>:anchor: <code>:anchor:</code></td></tr><tr><td>:rocket: <code>:rocket:</code></td><td>:airplane: <code>:airplane:</code></td><td>:helicopter: <code>:helicopter:</code></td></tr><tr><td>:steam_locomotive: <code>:steam_locomotive:</code></td><td>:tram: <code>:tram:</code></td><td>:mountain_railway: <code>:mountain_railway:</code></td></tr><tr><td>:bike: <code>:bike:</code></td><td>:aerial_tramway: <code>:aerial_tramway:</code></td><td>:suspension_railway: <code>:suspension_railway:</code></td></tr><tr><td>:mountain_cableway: <code>:mountain_cableway:</code></td><td>:tractor: <code>:tractor:</code></td><td>:blue_car: <code>:blue_car:</code></td></tr><tr><td>:oncoming_automobile: <code>:oncoming_automobile:</code></td><td>:car: <code>:car:</code></td><td>:red_car: <code>:red_car:</code></td></tr><tr><td>:taxi: <code>:taxi:</code></td><td>:oncoming_taxi: <code>:oncoming_taxi:</code></td><td>:articulated_lorry: <code>:articulated_lorry:</code></td></tr><tr><td>:bus: <code>:bus:</code></td><td>:oncoming_bus: <code>:oncoming_bus:</code></td><td>:rotating_light: <code>:rotating_light:</code></td></tr><tr><td>:police_car: <code>:police_car:</code></td><td>:oncoming_police_car: <code>:oncoming_police_car:</code></td><td>:fire_engine: <code>:fire_engine:</code></td></tr><tr><td>:ambulance: <code>:ambulance:</code></td><td>:minibus: <code>:minibus:</code></td><td>:truck: <code>:truck:</code></td></tr><tr><td>:train: <code>:train:</code></td><td>:station: <code>:station:</code></td><td>:train2: <code>:train2:</code></td></tr><tr><td>:bullettrain_front: <code>:bullettrain_front:</code></td><td>:bullettrain_side: <code>:bullettrain_side:</code></td><td>:light_rail: <code>:light_rail:</code></td></tr><tr><td>:monorail: <code>:monorail:</code></td><td>:railway_car: <code>:railway_car:</code></td><td>:trolleybus: <code>:trolleybus:</code></td></tr><tr><td>:ticket: <code>:ticket:</code></td><td>:fuelpump: <code>:fuelpump:</code></td><td>:vertical_traffic_light: <code>:vertical_traffic_light:</code></td></tr><tr><td>:traffic_light: <code>:traffic_light:</code></td><td>:warning: <code>:warning:</code></td><td>:construction: <code>:construction:</code></td></tr><tr><td>:beginner: <code>:beginner:</code></td><td>:atm: <code>:atm:</code></td><td>:slot_machine: <code>:slot_machine:</code></td></tr><tr><td>:busstop: <code>:busstop:</code></td><td>:barber: <code>:barber:</code></td><td>:hotsprings: <code>:hotsprings:</code></td></tr><tr><td>:checkered_flag: <code>:checkered_flag:</code></td><td>:crossed_flags: <code>:crossed_flags:</code></td><td>:izakaya_lantern: <code>:izakaya_lantern:</code></td></tr><tr><td>:moyai: <code>:moyai:</code></td><td>:circus_tent: <code>:circus_tent:</code></td><td>:performing_arts: <code>:performing_arts:</code></td></tr><tr><td>:round_pushpin: <code>:round_pushpin:</code></td><td>:triangular_flag_on_post: <code>:triangular_flag_on_post:</code></td><td>:jp: <code>:jp:</code></td></tr><tr><td>:kr: <code>:kr:</code></td><td>:cn: <code>:cn:</code></td><td>:us: <code>:us:</code></td></tr><tr><td>:fr: <code>:fr:</code></td><td>:es: <code>:es:</code></td><td>:it: <code>:it:</code></td></tr><tr><td>:ru: <code>:ru:</code></td><td>:gb: <code>:gb:</code></td><td>:uk: <code>:uk:</code></td></tr><tr><td>:de: <code>:de:</code></td><td></td><td></td></tr></tbody></table><p>Symbols</p><table><thead><tr><th>:one: <code>:one:</code></th><th>:two: <code>:two:</code></th><th>:three: <code>:three:</code></th></tr></thead><tbody><tr><td>:four: <code>:four:</code></td><td>:five: <code>:five:</code></td><td>:six: <code>:six:</code></td></tr><tr><td>:seven: <code>:seven:</code></td><td>:eight: <code>:eight:</code></td><td>:nine: <code>:nine:</code></td></tr><tr><td>:keycap_ten: <code>:keycap_ten:</code></td><td>:1234: <code>:1234:</code></td><td>:zero: <code>:zero:</code></td></tr><tr><td>:hash: <code>:hash:</code></td><td>:symbols: <code>:symbols:</code></td><td>:arrow_backward: <code>:arrow_backward:</code></td></tr><tr><td>:arrow_down: <code>:arrow_down:</code></td><td>:arrow_forward: <code>:arrow_forward:</code></td><td>:arrow_left: <code>:arrow_left:</code></td></tr><tr><td>:capital_abcd: <code>:capital_abcd:</code></td><td>:abcd: <code>:abcd:</code></td><td>:abc: <code>:abc:</code></td></tr><tr><td>:arrow_lower_left: <code>:arrow_lower_left:</code></td><td>:arrow_lower_right: <code>:arrow_lower_right:</code></td><td>:arrow_right: <code>:arrow_right:</code></td></tr><tr><td>:arrow_up: <code>:arrow_up:</code></td><td>:arrow_upper_left: <code>:arrow_upper_left:</code></td><td>:arrow_upper_right: <code>:arrow_upper_right:</code></td></tr><tr><td>:arrow_double_down: <code>:arrow_double_down:</code></td><td>:arrow_double_up: <code>:arrow_double_up:</code></td><td>:arrow_down_small: <code>:arrow_down_small:</code></td></tr><tr><td>:arrow_heading_down: <code>:arrow_heading_down:</code></td><td>:arrow_heading_up: <code>:arrow_heading_up:</code></td><td>:leftwards_arrow_with_hook: <code>:leftwards_arrow_with_hook:</code></td></tr><tr><td>:arrow_right_hook: <code>:arrow_right_hook:</code></td><td>:left_right_arrow: <code>:left_right_arrow:</code></td><td>:arrow_up_down: <code>:arrow_up_down:</code></td></tr><tr><td>:arrow_up_small: <code>:arrow_up_small:</code></td><td>:arrows_clockwise: <code>:arrows_clockwise:</code></td><td>:arrows_counterclockwise: <code>:arrows_counterclockwise:</code></td></tr><tr><td>:rewind: <code>:rewind:</code></td><td>:fast_forward: <code>:fast_forward:</code></td><td>:information_source: <code>:information_source:</code></td></tr><tr><td>:ok: <code>:ok:</code></td><td>:twisted_rightwards_arrows: <code>:twisted_rightwards_arrows:</code></td><td>:repeat: <code>:repeat:</code></td></tr><tr><td>:repeat_one: <code>:repeat_one:</code></td><td>:new: <code>:new:</code></td><td>:top: <code>:top:</code></td></tr><tr><td>:up: <code>:up:</code></td><td>:cool: <code>:cool:</code></td><td>:free: <code>:free:</code></td></tr><tr><td>:ng: <code>:ng:</code></td><td>:cinema: <code>:cinema:</code></td><td>:koko: <code>:koko:</code></td></tr><tr><td>:signal_strength: <code>:signal_strength:</code></td><td>:u5272: <code>:u5272:</code></td><td>:u5408: <code>:u5408:</code></td></tr><tr><td>:u55b6: <code>:u55b6:</code></td><td>:u6307: <code>:u6307:</code></td><td>:u6708: <code>:u6708:</code></td></tr><tr><td>:u6709: <code>:u6709:</code></td><td>:u6e80: <code>:u6e80:</code></td><td>:u7121: <code>:u7121:</code></td></tr><tr><td>:u7533: <code>:u7533:</code></td><td>:u7a7a: <code>:u7a7a:</code></td><td>:u7981: <code>:u7981:</code></td></tr><tr><td>:sa: <code>:sa:</code></td><td>:restroom: <code>:restroom:</code></td><td>:mens: <code>:mens:</code></td></tr><tr><td>:womens: <code>:womens:</code></td><td>:baby_symbol: <code>:baby_symbol:</code></td><td>:no_smoking: <code>:no_smoking:</code></td></tr><tr><td>:parking: <code>:parking:</code></td><td>:wheelchair: <code>:wheelchair:</code></td><td>:metro: <code>:metro:</code></td></tr><tr><td>:baggage_claim: <code>:baggage_claim:</code></td><td>:accept: <code>:accept:</code></td><td>:wc: <code>:wc:</code></td></tr><tr><td>:potable_water: <code>:potable_water:</code></td><td>:put_litter_in_its_place: <code>:put_litter_in_its_place:</code></td><td>:secret: <code>:secret:</code></td></tr><tr><td>:congratulations: <code>:congratulations:</code></td><td>:m: <code>:m:</code></td><td>:passport_control: <code>:passport_control:</code></td></tr><tr><td>:left_luggage: <code>:left_luggage:</code></td><td>:customs: <code>:customs:</code></td><td>:ideograph_advantage: <code>:ideograph_advantage:</code></td></tr><tr><td>:cl: <code>:cl:</code></td><td>:sos: <code>:sos:</code></td><td>:id: <code>:id:</code></td></tr><tr><td>:no_entry_sign: <code>:no_entry_sign:</code></td><td>:underage: <code>:underage:</code></td><td>:no_mobile_phones: <code>:no_mobile_phones:</code></td></tr><tr><td>:do_not_litter: <code>:do_not_litter:</code></td><td>:non-potable_water: <code>:non-potable_water:</code></td><td>:no_bicycles: <code>:no_bicycles:</code></td></tr><tr><td>:no_pedestrians: <code>:no_pedestrians:</code></td><td>:children_crossing: <code>:children_crossing:</code></td><td>:no_entry: <code>:no_entry:</code></td></tr><tr><td>:eight_spoked_asterisk: <code>:eight_spoked_asterisk:</code></td><td>:eight_pointed_black_star: <code>:eight_pointed_black_star:</code></td><td>:heart_decoration: <code>:heart_decoration:</code></td></tr><tr><td>:vs: <code>:vs:</code></td><td>:vibration_mode: <code>:vibration_mode:</code></td><td>:mobile_phone_off: <code>:mobile_phone_off:</code></td></tr><tr><td>:chart: <code>:chart:</code></td><td>:currency_exchange: <code>:currency_exchange:</code></td><td>:aries: <code>:aries:</code></td></tr><tr><td>:taurus: <code>:taurus:</code></td><td>:gemini: <code>:gemini:</code></td><td>:cancer: <code>:cancer:</code></td></tr><tr><td>:leo: <code>:leo:</code></td><td>:virgo: <code>:virgo:</code></td><td>:libra: <code>:libra:</code></td></tr><tr><td>:scorpius: <code>:scorpius:</code></td><td>:sagittarius: <code>:sagittarius:</code></td><td>:capricorn: <code>:capricorn:</code></td></tr><tr><td>:aquarius: <code>:aquarius:</code></td><td>:pisces: <code>:pisces:</code></td><td>:ophiuchus: <code>:ophiuchus:</code></td></tr><tr><td>:six_pointed_star: <code>:six_pointed_star:</code></td><td>:negative_squared_cross_mark: <code>:negative_squared_cross_mark:</code></td><td>:a: <code>:a:</code></td></tr><tr><td>:b: <code>:b:</code></td><td>:ab: <code>:ab:</code></td><td>:o2: <code>:o2:</code></td></tr><tr><td>:diamond_shape_with_a_dot_inside: <code>:diamond_shape_with_a_dot_inside:</code></td><td>:recycle: <code>:recycle:</code></td><td>:end: <code>:end:</code></td></tr><tr><td>:on: <code>:on:</code></td><td>:soon: <code>:soon:</code></td><td>:clock1: <code>:clock1:</code></td></tr><tr><td>:clock130: <code>:clock130:</code></td><td>:clock10: <code>:clock10:</code></td><td>:clock1030: <code>:clock1030:</code></td></tr><tr><td>:clock11: <code>:clock11:</code></td><td>:clock1130: <code>:clock1130:</code></td><td>:clock12: <code>:clock12:</code></td></tr><tr><td>:clock1230: <code>:clock1230:</code></td><td>:clock2: <code>:clock2:</code></td><td>:clock230: <code>:clock230:</code></td></tr><tr><td>:clock3: <code>:clock3:</code></td><td>:clock330: <code>:clock330:</code></td><td>:clock4: <code>:clock4:</code></td></tr><tr><td>:clock430: <code>:clock430:</code></td><td>:clock5: <code>:clock5:</code></td><td>:clock530: <code>:clock530:</code></td></tr><tr><td>:clock6: <code>:clock6:</code></td><td>:clock630: <code>:clock630:</code></td><td>:clock7: <code>:clock7:</code></td></tr><tr><td>:clock730: <code>:clock730:</code></td><td>:clock8: <code>:clock8:</code></td><td>:clock830: <code>:clock830:</code></td></tr><tr><td>:clock9: <code>:clock9:</code></td><td>:clock930: <code>:clock930:</code></td><td>:heavy_dollar_sign: <code>:heavy_dollar_sign:</code></td></tr><tr><td>:copyright: <code>:copyright:</code></td><td>:registered: <code>:registered:</code></td><td>:tm: <code>:tm:</code></td></tr><tr><td>:x: <code>:x:</code></td><td>:heavy_exclamation_mark: <code>:heavy_exclamation_mark:</code></td><td>:bangbang: <code>:bangbang:</code></td></tr><tr><td>:interrobang: <code>:interrobang:</code></td><td>:o: <code>:o:</code></td><td>:heavy_multiplication_x: <code>:heavy_multiplication_x:</code></td></tr><tr><td>:heavy_plus_sign: <code>:heavy_plus_sign:</code></td><td>:heavy_minus_sign: <code>:heavy_minus_sign:</code></td><td>:heavy_division_sign: <code>:heavy_division_sign:</code></td></tr><tr><td>:white_flower: <code>:white_flower:</code></td><td>:100: <code>:100:</code></td><td>:heavy_check_mark: <code>:heavy_check_mark:</code></td></tr><tr><td>:ballot_box_with_check: <code>:ballot_box_with_check:</code></td><td>:radio_button: <code>:radio_button:</code></td><td>:link: <code>:link:</code></td></tr><tr><td>:curly_loop: <code>:curly_loop:</code></td><td>:wavy_dash: <code>:wavy_dash:</code></td><td>:part_alternation_mark: <code>:part_alternation_mark:</code></td></tr><tr><td>:trident: <code>:trident:</code></td><td>:black_square: <code>:black_square:</code></td><td>:white_square: <code>:white_square:</code></td></tr><tr><td>:white_check_mark: <code>:white_check_mark:</code></td><td>:black_square_button: <code>:black_square_button:</code></td><td>:white_square_button: <code>:white_square_button:</code></td></tr><tr><td>:black_circle: <code>:black_circle:</code></td><td>:white_circle: <code>:white_circle:</code></td><td>:red_circle: <code>:red_circle:</code></td></tr><tr><td>:large_blue_circle: <code>:large_blue_circle:</code></td><td>:large_blue_diamond: <code>:large_blue_diamond:</code></td><td>:large_orange_diamond: <code>:large_orange_diamond:</code></td></tr><tr><td>:small_blue_diamond: <code>:small_blue_diamond:</code></td><td>:small_orange_diamond: <code>:small_orange_diamond:</code></td><td>:small_red_triangle: <code>:small_red_triangle:</code></td></tr><tr><td>:small_red_triangle_down: <code>:small_red_triangle_down:</code></td><td>:shipit: <code>:shipit:</code></td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
      <tag>超长文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown指定hightlight.js代码高亮</title>
    <link href="/2022/SUPPORTED_LANGUAGES/"/>
    <url>/2022/SUPPORTED_LANGUAGES/</url>
    
    <content type="html"><![CDATA[<h1 id="批注"><a href="#批注" class="headerlink" title="批注"></a>批注</h1><p>该文章来自:<a href="https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md">https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md</a><br>解决的问题是我所用博客主题默认的代码高亮指定语言类型时所需的 “magic word”</p><span id="more"></span><p>markdown怎么写看这:<a href="https://www.markdownguide.org/extended-syntax/#fenced-code-blocks">https://www.markdownguide.org/extended-syntax/#fenced-code-blocks</a></p><p>具体就是</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="hljs-code">```md</span><br><span class="hljs-code">这样写在注释栏的后面</span><br><span class="hljs-code">```</span><br></code></pre></td></tr></table></figure><h1 id="Supported-Languages"><a href="#Supported-Languages" class="headerlink" title="Supported Languages"></a>Supported Languages</h1><p>The table below shows the full list of languages (and corresponding classes/aliases) supported by Highlight.js.  Languages that list a <strong>Package</strong> below are 3rd party languages and are not bundled with the core library.  You can find their repositories by following the links.</p><p><strong>Note:</strong> The languages available will depend on how you’ve built or are included the library in your app. For example our default minified web build includes only ~40 popular languages.  See <a href="https://github.com/highlightjs/highlight.js#getting-the-library">Getting the Library</a> and <a href="https://github.com/highlightjs/highlight.js#importing-the-library">Importing the Library</a> in the README for examples of how to load additional/specific languages.</p><!-- LANGLIST --><table><thead><tr><th align="left">Language</th><th align="left">Aliases</th><th align="left">Package</th></tr></thead><tbody><tr><td align="left">1C</td><td align="left">1c</td><td align="left"></td></tr><tr><td align="left">4D</td><td align="left">4d</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-4d">highlightjs-4d</a></td></tr><tr><td align="left">ABAP</td><td align="left">sap-abap, abap</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-sap-abap">highlight-sap-abap</a></td></tr><tr><td align="left">ABNF</td><td align="left">abnf</td><td align="left"></td></tr><tr><td align="left">Access logs</td><td align="left">accesslog</td><td align="left"></td></tr><tr><td align="left">Ada</td><td align="left">ada</td><td align="left"></td></tr><tr><td align="left">Apex</td><td align="left">apex</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-apex/">highlightjs-apex</a></td></tr><tr><td align="left">Arduino (C++ w/Arduino libs)</td><td align="left">arduino, ino</td><td align="left"></td></tr><tr><td align="left">ARM assembler</td><td align="left">armasm, arm</td><td align="left"></td></tr><tr><td align="left">AVR assembler</td><td align="left">avrasm</td><td align="left"></td></tr><tr><td align="left">ActionScript</td><td align="left">actionscript, as</td><td align="left"></td></tr><tr><td align="left">Alan IF</td><td align="left">alan, i</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-alan">highlightjs-alan</a></td></tr><tr><td align="left">Alan</td><td align="left">ln</td><td align="left"><a href="https://github.com/alantech/highlightjs-alan">highlightjs-alan</a></td></tr><tr><td align="left">AngelScript</td><td align="left">angelscript, asc</td><td align="left"></td></tr><tr><td align="left">Apache</td><td align="left">apache, apacheconf</td><td align="left"></td></tr><tr><td align="left">AppleScript</td><td align="left">applescript, osascript</td><td align="left"></td></tr><tr><td align="left">Arcade</td><td align="left">arcade</td><td align="left"></td></tr><tr><td align="left">AsciiDoc</td><td align="left">asciidoc, adoc</td><td align="left"></td></tr><tr><td align="left">AspectJ</td><td align="left">aspectj</td><td align="left"></td></tr><tr><td align="left">AutoHotkey</td><td align="left">autohotkey</td><td align="left"></td></tr><tr><td align="left">AutoIt</td><td align="left">autoit</td><td align="left"></td></tr><tr><td align="left">Awk</td><td align="left">awk, mawk, nawk, gawk</td><td align="left"></td></tr><tr><td align="left">Bash</td><td align="left">bash, sh, zsh</td><td align="left"></td></tr><tr><td align="left">Basic</td><td align="left">basic</td><td align="left"></td></tr><tr><td align="left">BBCode</td><td align="left">bbcode</td><td align="left"><a href="https://github.com/RedGuy12/highlightjs-bbcode">highlightjs-bbcode</a></td></tr><tr><td align="left">Blade (Laravel)</td><td align="left">blade</td><td align="left"><a href="https://github.com/miken32/highlightjs-blade">highlightjs-blade</a></td></tr><tr><td align="left">BNF</td><td align="left">bnf</td><td align="left"></td></tr><tr><td align="left">Brainfuck</td><td align="left">brainfuck, bf</td><td align="left"></td></tr><tr><td align="left">C#</td><td align="left">csharp, cs</td><td align="left"></td></tr><tr><td align="left">C</td><td align="left">c, h</td><td align="left"></td></tr><tr><td align="left">C++</td><td align="left">cpp, hpp, cc, hh, c++, h++, cxx, hxx</td><td align="left"></td></tr><tr><td align="left">C/AL</td><td align="left">cal</td><td align="left"></td></tr><tr><td align="left">Cache Object Script</td><td align="left">cos, cls</td><td align="left"></td></tr><tr><td align="left">CMake</td><td align="left">cmake, cmake.in</td><td align="left"></td></tr><tr><td align="left">COBOL</td><td align="left">cobol, standard-cobol</td><td align="left"><a href="https://github.com/otterkit/highlightjs-cobol">highlightjs-cobol</a></td></tr><tr><td align="left">Coq</td><td align="left">coq</td><td align="left"></td></tr><tr><td align="left">CSP</td><td align="left">csp</td><td align="left"></td></tr><tr><td align="left">CSS</td><td align="left">css</td><td align="left"></td></tr><tr><td align="left">Cap’n Proto</td><td align="left">capnproto, capnp</td><td align="left"></td></tr><tr><td align="left">Chaos</td><td align="left">chaos, kaos</td><td align="left"><a href="https://github.com/chaos-lang/highlightjs-chaos">highlightjs-chaos</a></td></tr><tr><td align="left">Chapel</td><td align="left">chapel, chpl</td><td align="left"><a href="https://github.com/chapel-lang/highlightjs-chapel">highlightjs-chapel</a></td></tr><tr><td align="left">Cisco CLI</td><td align="left">cisco</td><td align="left"><a href="https://github.com/BMatheas/highlightjs-cisco-cli">highlightjs-cisco-cli</a></td></tr><tr><td align="left">Clojure</td><td align="left">clojure, clj</td><td align="left"></td></tr><tr><td align="left">CoffeeScript</td><td align="left">coffeescript, coffee, cson, iced</td><td align="left"></td></tr><tr><td align="left">CpcdosC+</td><td align="left">cpc</td><td align="left"><a href="https://github.com/SPinti-Software/highlightjs-cpcdos">highlightjs-cpcdos</a></td></tr><tr><td align="left">Crmsh</td><td align="left">crmsh, crm, pcmk</td><td align="left"></td></tr><tr><td align="left">Crystal</td><td align="left">crystal, cr</td><td align="left"></td></tr><tr><td align="left">cURL</td><td align="left">curl</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-curl">highlightjs-curl</a></td></tr><tr><td align="left">Cypher (Neo4j)</td><td align="left">cypher</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-cypher">highlightjs-cypher</a></td></tr><tr><td align="left">D</td><td align="left">d</td><td align="left"></td></tr><tr><td align="left">Dafny</td><td align="left">dafny</td><td align="left"><a href="https://github.com/ConsenSys/highlightjs-dafny">highlightjs-dafny</a></td></tr><tr><td align="left">Dart</td><td align="left">dart</td><td align="left"></td></tr><tr><td align="left">Delphi</td><td align="left">dpr, dfm, pas, pascal</td><td align="left"></td></tr><tr><td align="left">Diff</td><td align="left">diff, patch</td><td align="left"></td></tr><tr><td align="left">Django</td><td align="left">django, jinja</td><td align="left"></td></tr><tr><td align="left">DNS Zone file</td><td align="left">dns, zone, bind</td><td align="left"></td></tr><tr><td align="left">Dockerfile</td><td align="left">dockerfile, docker</td><td align="left"></td></tr><tr><td align="left">DOS</td><td align="left">dos, bat, cmd</td><td align="left"></td></tr><tr><td align="left">dsconfig</td><td align="left">dsconfig</td><td align="left"></td></tr><tr><td align="left">DTS (Device Tree)</td><td align="left">dts</td><td align="left"></td></tr><tr><td align="left">Dust</td><td align="left">dust, dst</td><td align="left"></td></tr><tr><td align="left">Dylan</td><td align="left">dylan</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-dylan">highlightjs-dylan</a></td></tr><tr><td align="left">EBNF</td><td align="left">ebnf</td><td align="left"></td></tr><tr><td align="left">Elixir</td><td align="left">elixir</td><td align="left"></td></tr><tr><td align="left">Elm</td><td align="left">elm</td><td align="left"></td></tr><tr><td align="left">Erlang</td><td align="left">erlang, erl</td><td align="left"></td></tr><tr><td align="left">Excel</td><td align="left">excel, xls, xlsx</td><td align="left"></td></tr><tr><td align="left">Extempore</td><td align="left">extempore, xtlang, xtm</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-xtlang">highlightjs-xtlang</a></td></tr><tr><td align="left">F#</td><td align="left">fsharp, fs</td><td align="left"></td></tr><tr><td align="left">FIX</td><td align="left">fix</td><td align="left"></td></tr><tr><td align="left">Fortran</td><td align="left">fortran, f90, f95</td><td align="left"></td></tr><tr><td align="left">FunC</td><td align="left">func</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-func">highlightjs-func</a></td></tr><tr><td align="left">G-Code</td><td align="left">gcode, nc</td><td align="left"></td></tr><tr><td align="left">Gams</td><td align="left">gams, gms</td><td align="left"></td></tr><tr><td align="left">GAUSS</td><td align="left">gauss, gss</td><td align="left"></td></tr><tr><td align="left">GDScript</td><td align="left">godot, gdscript</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-gdscript">highlightjs-gdscript</a></td></tr><tr><td align="left">Gherkin</td><td align="left">gherkin</td><td align="left"></td></tr><tr><td align="left">Glimmer and EmberJS</td><td align="left">hbs, glimmer, html.hbs, html.handlebars, htmlbars</td><td align="left"><a href="https://github.com/NullVoxPopuli/highlightjs-glimmer">highlightjs-glimmer</a></td></tr><tr><td align="left">GN for Ninja</td><td align="left">gn, gni</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-GN">highlightjs-GN</a></td></tr><tr><td align="left">Go</td><td align="left">go, golang</td><td align="left"></td></tr><tr><td align="left">Grammatical Framework</td><td align="left">gf</td><td align="left"><a href="https://github.com/johnjcamilleri/highlightjs-gf">highlightjs-gf</a></td></tr><tr><td align="left">Golo</td><td align="left">golo, gololang</td><td align="left"></td></tr><tr><td align="left">Gradle</td><td align="left">gradle</td><td align="left"></td></tr><tr><td align="left">GraphQL</td><td align="left">graphql</td><td align="left"></td></tr><tr><td align="left">Groovy</td><td align="left">groovy</td><td align="left"></td></tr><tr><td align="left">GSQL</td><td align="left">gsql</td><td align="left"><a href="https://github.com/DanBarkus/highlightjs-gsql">highlightjs-gsql</a></td></tr><tr><td align="left">HTML, XML</td><td align="left">xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg</td><td align="left"></td></tr><tr><td align="left">HTTP</td><td align="left">http, https</td><td align="left"></td></tr><tr><td align="left">Haml</td><td align="left">haml</td><td align="left"></td></tr><tr><td align="left">Handlebars</td><td align="left">handlebars, hbs, html.hbs, html.handlebars</td><td align="left"></td></tr><tr><td align="left">Haskell</td><td align="left">haskell, hs</td><td align="left"></td></tr><tr><td align="left">Haxe</td><td align="left">haxe, hx</td><td align="left"></td></tr><tr><td align="left">High-level shader language</td><td align="left">hlsl</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-hlsl">highlightjs-hlsl</a></td></tr><tr><td align="left">Hy</td><td align="left">hy, hylang</td><td align="left"></td></tr><tr><td align="left">Ini, TOML</td><td align="left">ini, toml</td><td align="left"></td></tr><tr><td align="left">Inform7</td><td align="left">inform7, i7</td><td align="left"></td></tr><tr><td align="left">IRPF90</td><td align="left">irpf90</td><td align="left"></td></tr><tr><td align="left">JSON</td><td align="left">json</td><td align="left"></td></tr><tr><td align="left">Java</td><td align="left">java, jsp</td><td align="left"></td></tr><tr><td align="left">JavaScript</td><td align="left">javascript, js, jsx</td><td align="left"></td></tr><tr><td align="left">Jolie</td><td align="left">jolie, iol, ol</td><td align="left"><a href="https://github.com/xiroV/highlightjs-jolie">highlightjs-jolie</a></td></tr><tr><td align="left">Julia</td><td align="left">julia, julia-repl</td><td align="left"></td></tr><tr><td align="left">Kotlin</td><td align="left">kotlin, kt</td><td align="left"></td></tr><tr><td align="left">LaTeX</td><td align="left">tex</td><td align="left"></td></tr><tr><td align="left">Leaf</td><td align="left">leaf</td><td align="left"></td></tr><tr><td align="left">Lean</td><td align="left">lean</td><td align="left"><a href="https://github.com/leanprover-community/highlightjs-lean">highlightjs-lean</a></td></tr><tr><td align="left">Lasso</td><td align="left">lasso, ls, lassoscript</td><td align="left"></td></tr><tr><td align="left">Less</td><td align="left">less</td><td align="left"></td></tr><tr><td align="left">LDIF</td><td align="left">ldif</td><td align="left"></td></tr><tr><td align="left">Lisp</td><td align="left">lisp</td><td align="left"></td></tr><tr><td align="left">LiveCode Server</td><td align="left">livecodeserver</td><td align="left"></td></tr><tr><td align="left">LiveScript</td><td align="left">livescript, ls</td><td align="left"></td></tr><tr><td align="left">LookML</td><td align="left">lookml</td><td align="left"><a href="https://github.com/spectacles-ci/highlightjs-lookml">highlightjs-lookml</a></td></tr><tr><td align="left">Lua</td><td align="left">lua</td><td align="left"></td></tr><tr><td align="left">Macaulay2</td><td align="left">macaulay2</td><td align="left"><a href="https://github.com/d-torrance/highlightjs-macaulay2">highlightjs-macaulay2</a></td></tr><tr><td align="left">Makefile</td><td align="left">makefile, mk, mak, make</td><td align="left"></td></tr><tr><td align="left">Markdown</td><td align="left">markdown, md, mkdown, mkd</td><td align="left"></td></tr><tr><td align="left">Mathematica</td><td align="left">mathematica, mma, wl</td><td align="left"></td></tr><tr><td align="left">Matlab</td><td align="left">matlab</td><td align="left"></td></tr><tr><td align="left">Maxima</td><td align="left">maxima</td><td align="left"></td></tr><tr><td align="left">Maya Embedded Language</td><td align="left">mel</td><td align="left"></td></tr><tr><td align="left">Mercury</td><td align="left">mercury</td><td align="left"></td></tr><tr><td align="left">mIRC Scripting Language</td><td align="left">mirc, mrc</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-mirc">highlightjs-mirc</a></td></tr><tr><td align="left">Mizar</td><td align="left">mizar</td><td align="left"></td></tr><tr><td align="left">MKB</td><td align="left">mkb</td><td align="left"><a href="https://github.com/Dereavy/highlightjs-mkb">highlightjs-mkb</a></td></tr><tr><td align="left">MLIR</td><td align="left">mlir</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-mlir">highlightjs-mlir</a></td></tr><tr><td align="left">Mojolicious</td><td align="left">mojolicious</td><td align="left"></td></tr><tr><td align="left">Monkey</td><td align="left">monkey</td><td align="left"></td></tr><tr><td align="left">Moonscript</td><td align="left">moonscript, moon</td><td align="left"></td></tr><tr><td align="left">N1QL</td><td align="left">n1ql</td><td align="left"></td></tr><tr><td align="left">NSIS</td><td align="left">nsis</td><td align="left"></td></tr><tr><td align="left">Never</td><td align="left">never</td><td align="left"><a href="https://github.com/never-lang/highlightjs-never">highlightjs-never</a></td></tr><tr><td align="left">Nginx</td><td align="left">nginx, nginxconf</td><td align="left"></td></tr><tr><td align="left">Nim</td><td align="left">nim, nimrod</td><td align="left"></td></tr><tr><td align="left">Nix</td><td align="left">nix</td><td align="left"></td></tr><tr><td align="left">Oak</td><td align="left">oak</td><td align="left"><a href="https://github.com/timlabs/highlightjs-oak">highlightjs-oak</a></td></tr><tr><td align="left">Object Constraint Language</td><td align="left">ocl</td><td align="left"><a href="https://github.com/nhomble/highlightjs-ocl">highlightjs-ocl</a></td></tr><tr><td align="left">OCaml</td><td align="left">ocaml, ml</td><td align="left"></td></tr><tr><td align="left">Objective C</td><td align="left">objectivec, mm, objc, obj-c, obj-c++, objective-c++</td><td align="left"></td></tr><tr><td align="left">OpenGL Shading Language</td><td align="left">glsl</td><td align="left"></td></tr><tr><td align="left">OpenSCAD</td><td align="left">openscad, scad</td><td align="left"></td></tr><tr><td align="left">Oracle Rules Language</td><td align="left">ruleslanguage</td><td align="left"></td></tr><tr><td align="left">Oxygene</td><td align="left">oxygene</td><td align="left"></td></tr><tr><td align="left">PF</td><td align="left">pf, pf.conf</td><td align="left"></td></tr><tr><td align="left">PHP</td><td align="left">php</td><td align="left"></td></tr><tr><td align="left">Papyrus</td><td align="left">papyrus, psc</td><td align="left"><a href="https://github.com/Pickysaurus/highlightjs-papyrus">highlightjs-papyrus</a></td></tr><tr><td align="left">Parser3</td><td align="left">parser3</td><td align="left"></td></tr><tr><td align="left">Perl</td><td align="left">perl, pl, pm</td><td align="left"></td></tr><tr><td align="left">Pine Script</td><td align="left">pine, pinescript</td><td align="left"><a href="https://github.com/jeyllani/highlightjs-pine">highlightjs-pine</a></td></tr><tr><td align="left">Plaintext</td><td align="left">plaintext, txt, text</td><td align="left"></td></tr><tr><td align="left">Pony</td><td align="left">pony</td><td align="left"></td></tr><tr><td align="left">PostgreSQL &amp; PL/pgSQL</td><td align="left">pgsql, postgres, postgresql</td><td align="left"></td></tr><tr><td align="left">PowerShell</td><td align="left">powershell, ps, ps1</td><td align="left"></td></tr><tr><td align="left">Processing</td><td align="left">processing</td><td align="left"></td></tr><tr><td align="left">Prolog</td><td align="left">prolog</td><td align="left"></td></tr><tr><td align="left">Properties</td><td align="left">properties</td><td align="left"></td></tr><tr><td align="left">Protocol Buffers</td><td align="left">protobuf</td><td align="left"></td></tr><tr><td align="left">Puppet</td><td align="left">puppet, pp</td><td align="left"></td></tr><tr><td align="left">Python</td><td align="left">python, py, gyp</td><td align="left"></td></tr><tr><td align="left">Python profiler results</td><td align="left">profile</td><td align="left"></td></tr><tr><td align="left">Python REPL</td><td align="left">python-repl, pycon</td><td align="left"></td></tr><tr><td align="left">Q#</td><td align="left">qsharp</td><td align="left"><a href="https://github.com/fedonman/highlightjs-qsharp">highlightjs-qsharp</a></td></tr><tr><td align="left">Q</td><td align="left">k, kdb</td><td align="left"></td></tr><tr><td align="left">QML</td><td align="left">qml</td><td align="left"></td></tr><tr><td align="left">R</td><td align="left">r</td><td align="left"></td></tr><tr><td align="left">Razor CSHTML</td><td align="left">cshtml, razor, razor-cshtml</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-cshtml-razor">highlightjs-cshtml-razor</a></td></tr><tr><td align="left">ReasonML</td><td align="left">reasonml, re</td><td align="left"></td></tr><tr><td align="left">Rebol &amp; Red</td><td align="left">redbol, rebol, red, red-system</td><td align="left"><a href="https://github.com/oldes/highlightjs-redbol">highlightjs-redbol</a></td></tr><tr><td align="left">RenderMan RIB</td><td align="left">rib</td><td align="left"></td></tr><tr><td align="left">RenderMan RSL</td><td align="left">rsl</td><td align="left"></td></tr><tr><td align="left">RiScript</td><td align="left">risc, riscript</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-riscript">highlightjs-riscript</a></td></tr><tr><td align="left">Roboconf</td><td align="left">graph, instances</td><td align="left"></td></tr><tr><td align="left">Robot Framework</td><td align="left">robot, rf</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-robot">highlightjs-robot</a></td></tr><tr><td align="left">RPM spec files</td><td align="left">rpm-specfile, rpm, spec, rpm-spec, specfile</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-rpm-specfile">highlightjs-rpm-specfile</a></td></tr><tr><td align="left">Ruby</td><td align="left">ruby, rb, gemspec, podspec, thor, irb</td><td align="left"></td></tr><tr><td align="left">Rust</td><td align="left">rust, rs</td><td align="left"></td></tr><tr><td align="left">SAS</td><td align="left">SAS, sas</td><td align="left"></td></tr><tr><td align="left">SCSS</td><td align="left">scss</td><td align="left"></td></tr><tr><td align="left">SQL</td><td align="left">sql</td><td align="left"></td></tr><tr><td align="left">STEP Part 21</td><td align="left">p21, step, stp</td><td align="left"></td></tr><tr><td align="left">Scala</td><td align="left">scala</td><td align="left"></td></tr><tr><td align="left">Scheme</td><td align="left">scheme</td><td align="left"></td></tr><tr><td align="left">Scilab</td><td align="left">scilab, sci</td><td align="left"></td></tr><tr><td align="left">Shape Expressions</td><td align="left">shexc</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-shexc">highlightjs-shexc</a></td></tr><tr><td align="left">Shell</td><td align="left">shell, console</td><td align="left"></td></tr><tr><td align="left">Smali</td><td align="left">smali</td><td align="left"></td></tr><tr><td align="left">Smalltalk</td><td align="left">smalltalk, st</td><td align="left"></td></tr><tr><td align="left">SML</td><td align="left">sml, ml</td><td align="left"></td></tr><tr><td align="left">Solidity</td><td align="left">solidity, sol</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-solidity">highlightjs-solidity</a></td></tr><tr><td align="left">Splunk SPL</td><td align="left">spl</td><td align="left"><a href="https://github.com/swsoyee/highlightjs-spl">highlightjs-spl</a></td></tr><tr><td align="left">Stan</td><td align="left">stan, stanfuncs</td><td align="left"></td></tr><tr><td align="left">Stata</td><td align="left">stata</td><td align="left"></td></tr><tr><td align="left">Structured Text</td><td align="left">iecst, scl, stl, structured-text</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-structured-text">highlightjs-structured-text</a></td></tr><tr><td align="left">Stylus</td><td align="left">stylus, styl</td><td align="left"></td></tr><tr><td align="left">SubUnit</td><td align="left">subunit</td><td align="left"></td></tr><tr><td align="left">Supercollider</td><td align="left">supercollider, sc</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-supercollider">highlightjs-supercollider</a></td></tr><tr><td align="left">Svelte</td><td align="left">svelte</td><td align="left"><a href="https://github.com/AlexxNB/highlightjs-svelte">highlightjs-svelte</a></td></tr><tr><td align="left">Swift</td><td align="left">swift</td><td align="left"></td></tr><tr><td align="left">Tcl</td><td align="left">tcl, tk</td><td align="left"></td></tr><tr><td align="left">Terraform (HCL)</td><td align="left">terraform, tf, hcl</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-terraform">highlightjs-terraform</a></td></tr><tr><td align="left">Test Anything Protocol</td><td align="left">tap</td><td align="left"></td></tr><tr><td align="left">Thrift</td><td align="left">thrift</td><td align="left"></td></tr><tr><td align="left">Toit</td><td align="left">toit</td><td align="left"><a href="https://github.com/snxx-lppxx/toit-highlight">toit-highlight</a></td></tr><tr><td align="left">TP</td><td align="left">tp</td><td align="left"></td></tr><tr><td align="left">Transact-SQL</td><td align="left">tsql</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-tsql">highlightjs-tsql</a></td></tr><tr><td align="left">Twig</td><td align="left">twig, craftcms</td><td align="left"></td></tr><tr><td align="left">TypeScript</td><td align="left">typescript, ts</td><td align="left"></td></tr><tr><td align="left">Unicorn Rails log</td><td align="left">unicorn-rails-log</td><td align="left"><a href="https://github.com/sweetppro/highlightjs-unicorn-rails-log">highlightjs-unicorn-rails-log</a></td></tr><tr><td align="left">VB.Net</td><td align="left">vbnet, vb</td><td align="left"></td></tr><tr><td align="left">VBA</td><td align="left">vba</td><td align="left"><a href="https://github.com/dullin/highlightjs-vba">highlightjs-vba</a></td></tr><tr><td align="left">VBScript</td><td align="left">vbscript, vbs</td><td align="left"></td></tr><tr><td align="left">VHDL</td><td align="left">vhdl</td><td align="left"></td></tr><tr><td align="left">Vala</td><td align="left">vala</td><td align="left"></td></tr><tr><td align="left">Verilog</td><td align="left">verilog, v</td><td align="left"></td></tr><tr><td align="left">Vim Script</td><td align="left">vim</td><td align="left"></td></tr><tr><td align="left">X#</td><td align="left">xsharp, xs, prg</td><td align="left"><a href="https://github.com/InfomindsAg/highlightjs-xsharp">highlightjs-xsharp</a></td></tr><tr><td align="left">X++</td><td align="left">axapta, x++</td><td align="left"></td></tr><tr><td align="left">x86 Assembly</td><td align="left">x86asm</td><td align="left"></td></tr><tr><td align="left">XL</td><td align="left">xl, tao</td><td align="left"></td></tr><tr><td align="left">XQuery</td><td align="left">xquery, xpath, xq</td><td align="left"></td></tr><tr><td align="left">YAML</td><td align="left">yml, yaml</td><td align="left"></td></tr><tr><td align="left">ZenScript</td><td align="left">zenscript, zs</td><td align="left"><a href="https://github.com/highlightjs/highlightjs-zenscript">highlightjs-zenscript</a></td></tr><tr><td align="left">Zephir</td><td align="left">zephir, zep</td><td align="left"></td></tr></tbody></table><!-- LANGLIST_END --><!-- document it until we can fix it --><h2 id="Alias-Overlap"><a href="#Alias-Overlap" class="headerlink" title="Alias Overlap"></a>Alias Overlap</h2><p>If you are using either of these languages at the same time please be sure to<br>use the full name and not the alias to avoid any ambiguity.</p><table><thead><tr><th align="left">Language</th><th align="left">Overlap</th></tr></thead><tbody><tr><td align="left">SML</td><td align="left">ml</td></tr><tr><td align="left">OCaml</td><td align="left">ml</td></tr><tr><td align="left">Lasso</td><td align="left">ls</td></tr><tr><td align="left">LiveScript</td><td align="left">ls</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
      <tag>超长文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ESP32:搞定终端下MicroPython编程</title>
    <link href="/2022/ESP32-pyinShell/"/>
    <url>/2022/ESP32-pyinShell/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天第一次真正给板子刷上MicroPython，因为我出门只带了几天前说的刚买那个中柏电脑，刷成了纯linux系统，就想试试从开源工具刷写开发板。</p><h1 id="困扰"><a href="#困扰" class="headerlink" title="困扰"></a>困扰</h1><p>按照流程很轻松就能用esp-tool.py清空flash，然后刷上固件，但怎样编写程序就没有资料了。有教程说可以挂载成u盘一样的设备，但至少这个板子不行。经过疯狂寻找，正当我快放弃时找到这样一篇文章<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://yhhuang1966.blogspot.com/2019/07/micropython-on-esp32.html">[1]</span></a></sup>。</p><p>进而通过向REPL方向的寻找，确定了一种只需linux终端就可用的方法，而且无需Thonny<br>(但是需要adafruit-ampy :P)</p><h1 id="简要流程"><a href="#简要流程" class="headerlink" title="简要流程"></a>简要流程</h1><h2 id="picocom"><a href="#picocom" class="headerlink" title="picocom"></a>picocom</h2><ol><li>sudo apt-get install picocom #该步骤安装的是串口终端助手,在<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://yhhuang1966.blogspot.com/2019/07/micropython-on-esp32.html">[1]</span></a></sup>中有提到</li><li>配置串口权限，文末附上参考脚本，记得变通</li><li>sudo picocom -b 115200 /dev/ttyUSB0 #串口连接开发板</li><li>注意看picocom给出的信息:Type [C-a] [C-h] to see available commands 就是先按ctrl+a，再按ctrl+h</li><li>连接后按几下回车才会出现熟悉的REPL界面</li></ol><h2 id="ampy"><a href="#ampy" class="headerlink" title="ampy"></a>ampy</h2><ol><li>pip给出提示大概意思就是不要用sudo，所以我用的是 pip install adafruit-ampy</li><li>ampy –version 我用不了，不造是为虾米，反正不粽药啦</li><li>但是ampy –help 有用，可以看到具体操作和linux shell 类似，mkdir、ls、rm、rmdir都不用说了。</li><li>ampy –port /dev/ttyUSB0 run led.py #跑当前目录下的led.py文件<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="led.py123456789101112131415161718&#x27;&#x27;&#x27;功能介绍： LED闪烁例程&#x27;&#x27;&#x27;import utimeimport machine# 声明一个引脚 例如 22 作为我们特定开发板板载LED的引脚led_pin = machine.Pin(22, machine.Pin.OUT)for i in range(20):    # 点亮LED -&gt; 高电平    led_pin.value(1)    # 延时 500ms    utime.sleep_ms(500)    # 关闭LED -&gt; 低电平    led_pin.value(0)    # 延时500ms    utime.sleep_ms(500)">[5]</span></a></sup>，ctrl+c没法打断</li><li>ampy –port /dev/ttyUSB0 reset #给板子软重启，如果死循环没写到main.py就能打断了。但如果写到main.py的话据说<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://yhhuang1966.blogspot.com/2019/07/micropython-on-esp32.html">[1]</span></a></sup>只能重刷固件了</li></ol><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>picocom 开启时用不了ampy，因为picocom会占用串口，按ctrl+a，之后ctrl+x退出picocom</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>配置串口权限的脚本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>ls -al /dev/ttyUSB0<br>chmod 666 /dev/ttyUSB0<br>sudo chmod 666 /dev/ttyUSB0 <br>ls -al /dev/ttyUSB0 <br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure><p>还有如下几篇文章以供参考：</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="http://yhhuang1966.blogspot.com/2019/07/micropython-on-esp32.html">http://yhhuang1966.blogspot.com/2019/07/micropython-on-esp32.html</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.cirmall.com/bbs/thread-102620-1-1.html">https://www.cirmall.com/bbs/thread-102620-1-1.html</a> 介绍了picocom和ampy两种方法，对从底层了解和开发板通信帮助很大<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://docs.micropython.org/en/v1.8.3/esp8266/esp8266/tutorial/repl.html">https://docs.micropython.org/en/v1.8.3/esp8266/esp8266/tutorial/repl.html</a> 官方文档，介绍了REPL的基本操作<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://docs.micropython.org/en/v1.8.3/esp8266/esp8266/tutorial/filesystem.html#creating-and-reading-files">https://docs.micropython.org/en/v1.8.3/esp8266/esp8266/tutorial/filesystem.html#creating-and-reading-files</a> 介绍了文件和文件夹的增删，但没有改查<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>led.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">功能介绍： LED闪烁例程</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> utime<br><span class="hljs-keyword">import</span> machine<br><br><span class="hljs-comment"># 声明一个引脚 例如 22 作为我们特定开发板板载LED的引脚</span><br>led_pin = machine.Pin(<span class="hljs-number">22</span>, machine.Pin.OUT)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    <span class="hljs-comment"># 点亮LED -&gt; 高电平</span><br>    led_pin.value(<span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># 延时 500ms</span><br>    utime.sleep_ms(<span class="hljs-number">500</span>)<br>    <span class="hljs-comment"># 关闭LED -&gt; 低电平</span><br>    led_pin.value(<span class="hljs-number">0</span>)<br>    <span class="hljs-comment"># 延时500ms</span><br>    utime.sleep_ms(<span class="hljs-number">500</span>)<br></code></pre></td></tr></table></figure><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于openwrt，建立家庭云打印服务</title>
    <link href="/2022/opWRThomePrint/"/>
    <url>/2022/opWRThomePrint/</url>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>我所在的宿舍大家集资买了一部二手喷墨打印机，但使用率很低。其根本问题在于宿舍没有地方放，导致每次使用都需要拿出来插线连接，之后再拔掉放回去。几天前我想到可以通过我的路由器搭建网络打印服务，本文描述了通过将打印机与带usb拓展接口的openwrt系统路由器连接，通过openwrt仓库内置包实现搭建局域网云打印服务的方法。</p><h1 id="环境与硬件要求"><a href="#环境与硬件要求" class="headerlink" title="环境与硬件要求"></a>环境与硬件要求</h1><ul><li>本文系统环境基于小米路由器mini<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://openwrt.org/toh/xiaomi/miwifi_mini">[1]</span></a></sup>在openwrt官网下载的镜像</li><li>本文将路由器作为全局域网的根节点，打印机连接在路由器上，使用局域网内其他设备搭建服务的情况暂不考虑</li><li>你的路由器能正常上网以通过opkg下载包</li><li>申请打印的设备已安装了能通过有线连接进行打印的驱动</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li>连接打印机与路由器</li><li>进入后台管理界面</li><li>系统-软件- Update lists…</li><li>搜索 printer</li><li>安装 kmod-usb-printer、luci-app-p910nd，我当时尝试时安装了别的包，可能是没必要的，这个自己看描述自己决定吧。</li><li>在网页最上面出现了服务下拉框，这是luci-app-* 下载下来的东西，点进 p910nd - Printer server，如果不会linux的话这里会比较复杂，如果你懂就会发现操作不难。<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">设备：当打印机开机，usb接入路由器后，linux为其挂载的地址。一般为<span class="hljs-regexp">/dev/u</span>sb/lp0，如果你不愿意深究就填这个。<br>我喜欢比较清爽的系统，所以为了确定地址究竟是什么需要ssh或者通过终端连接路由器，输入<br>ls <span class="hljs-regexp">/dev/u</span>sb <br>大概就会列出来，我是凭感觉敲得，你可能需要变通一下<br>接口：只给路由器下内网使用，我选的lan，其他高级东东我也不懂<br>端口：不改，<span class="hljs-number">9100</span><br></code></pre></td></tr></table></figure></li></ol><p>然后保存并应用，电脑端设置太麻烦我不想说，上网搜索电脑添加网络打印机的方法肯定有很多人写。总之需要安装驱动，寻找设备，添加设备。</p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://openwrt.org/toh/xiaomi/miwifi_mini">https://openwrt.org/toh/xiaomi/miwifi_mini</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>网络</category>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中柏jnb10电脑测评与使用场景分析</title>
    <link href="/2022/jnb10laptop/"/>
    <url>/2022/jnb10laptop/</url>
    
    <content type="html"><![CDATA[<h1 id="一个电脑爱好者的成长经历"><a href="#一个电脑爱好者的成长经历" class="headerlink" title="一个电脑爱好者的成长经历"></a>一个电脑爱好者的成长经历</h1><p>在我小学时候曾经用一些a4纸和胶带做了一个真-比一元硬币还薄的电脑。上面画上键盘，屏幕，用纸剪个U盘再做个USB接口。初中时超级想拥有一个树莓派，就是因为800元左右就能拥有自己的电脑实在太有吸引力，当时家里只有一个性能孱弱的台式机和有一本《电路信号系统》那么厚的笔记本。时间飞逝，直到初二时我第一次给台式机升级了9600gt和4G内存，之后换成HD7750，再到中考后换上第一代锐龙，高二用1600买了二手不知道是不是矿渣的GTX1060 6G。大一一入校就买了个二手树莓派然后输了几天apt后吃灰到大二和别人换了一块ax309的fpga，再到大三前的暑假给家里电脑换上共40G的内存。对于电脑性能的追求在钱包允许的范围内已经到了终点。</p><p>经过几周的使用，这个轻薄到如08年乔布斯从牛皮纸袋中取出的MacBook Air、满足一个小孩对电脑的想象的设备已经成为了我不可不带的EDC。</p><h1 id="购买原因（买前所想）"><a href="#购买原因（买前所想）" class="headerlink" title="购买原因（买前所想）"></a>购买原因（买前所想）</h1><ul><li>现在我使用的小新air14 2020锐龙版虽然是个轻薄本，但1.3kg左右的重量和使用2年后的续航让我十分焦虑</li><li>更别说现在电脑很多时间都至少连接了充电线、USB、耳机线，每次带出门都要和线纠缠半天</li><li>文本处理，看网页，查东西还是电脑好用</li><li>每天随身带个电脑对我来说真的很帅</li><li>有个备用机的感觉让人很安心</li><li>x86的cpu，兴许可以当个服务器<br>所以，经过几天的精挑细选，在闲鱼上买了个288的电脑，大概明后天到货。在还没收到的情况下写这种文章，到时候是惊喜还是惊吓真说不准🫤</li></ul><h1 id="购买期望"><a href="#购买期望" class="headerlink" title="购买期望"></a>购买期望</h1><ol><li>性能(依次上升)<ul><li>能跑动notepad++</li><li>能跑ubuntu的桌面环境，如xfce、lxde</li><li>跑动腾讯会议</li><li>能看图片</li><li>potplayer播放nas电影</li></ul></li><li>硬件(依次上升)    <ul><li>无损坏</li><li>io正常</li><li>有5Gwifi</li><li>电量消耗在合理范围</li></ul></li></ol><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><ul><li>文本，图片浏览</li><li>远程运维</li><li>远程桌面</li><li>学习html，python</li></ul><h1 id="拿到手后发现的优缺点"><a href="#拿到手后发现的优缺点" class="headerlink" title="拿到手后发现的优缺点"></a>拿到手后发现的优缺点</h1><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><ul><li>屏幕素质相对优秀，虽然根据网上信息其挂载了一块TN屏但可视角度与色准肉眼所见很优秀，分辨率可达视网膜屏标准</li><li>硬件性能可用，相比我之前购买的驰为Hi8，这个电脑的硬件足以带动基础上网和文本编辑功能（暂未尝试富文本编辑）：n3350的cpu，6G板载内存，60G左右的可用存储空间</li><li>网卡支持5Gwifi网络连接</li><li>被动散热，无需担心堵塞散热口，可以安心放在膝上使用</li><li>毫无发热感觉，根据拆机发现电脑内部元件分布很宽松而发热元件都在电脑左上的一块小板上。但相比结构类似、使用Z3736F的驰为Hi8发热控制好太多，在我现在使用它打下这些文字时丝毫感觉不到任何的热量</li><li>续航优秀，几天前我在基于ubuntu server系统安装xfce后的第一时间就写了两个脚本<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="提到的代码123456789101112131415#!/bin/shif [ -n &quot;$1&quot; ];thenecho &quot;current parameter: &quot;    if [ $1 -gt 0 ] &amp;&amp; [ $1 -lt 346 ];then        echo &quot;$1&quot; &gt; /sys/class/backlight/intel_backlight/brightness    elif [ ! $1 -gt 0 ];then        echo &quot;1&quot; &gt; /sys/class/backlight/intel_backlight/brightness    elif [ ! $1 -lt 346 ];then        echo &quot;345&quot; &gt; /sys/class/backlight/intel_backlight/brightness    fielse    echo &quot;no parameter input&quot;ficat /sys/class/backlight/intel_backlight/brightness;exit 0123#!/bin/bashecho `cat /sys/class/power_supply/BAT0/capacity`&quot; # &quot;`date` &gt;&gt; log_battery_life.logecho `cat /sys/class/power_supply/BAT0/capacity`&quot; # &quot;`date` ">[1]</span></a></sup>用来监测电量和调节亮度。在合理亮度下使用半天大概只掉20左右的电。根据我预测，如果续航不会在低于一定程度时迅速消失的话（经过几天使用，电量消耗线性度还算不错），要是只用来上网打字和学习linux运维，应该很容易达到10小时左右的通勤续航要求</li><li>可维修性，虽然各个配件应该会随着时间推移越来越少，但电池看起来可以与2s电池通用，充电口使用标准DC接口。因此在不受到冲击损伤的情况下，最容易损耗的部分维修应该是长期可行的</li><li>便宜，用起来不心疼</li><li>重量合理，相比老工作站虽然性能不佳但续航和便携性做到了优异水平</li><li>有hdmi接口，但是是mini hdmi</li><li>有一个sd卡读卡器和一个usb3.0接口</li><li>有一个m.2接口</li><li>键盘上方有电源、大小写和Capslock的指示灯</li><li>无可感知频闪</li></ul><h2 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h2><ul><li>笔记本电脑的“身体”（与“头”相对）在受到扭力时有可能会花屏并100%死机，重插主板侧排线没有解决，疑似存在虚焊。当花屏现象发生时只能通过长按开机键强制关机，此时若花屏状态或其诱因未接触会导致无法开机，过一段时间或因不明原因才能恢复，多数情况下强制关机后可以正常开机。因此稳定性存在极大隐患。</li><li>屏幕有漏光现象，在我尝试拆屏后疑似恶化，可能与屏幕存在应力未释放有关。拆屏难度较大：虽然只有四颗螺丝在胶垫下，但拆除胶垫有一定可能导致粘性降低，进而导致丢失；屏幕上下边通过胶黏剂粘接，无损拆除难度较大。</li><li>触控板精度差，不跟手，很明显有较大延迟，充电时可能因为充电器只有两脚导致在一段时间后触控板使用时会jiggle</li><li>没有键盘背光</li><li>网页浏览性能较差，对于动画较多的网页表现很差，如米游社的活动和地图等，但高德地图表现良好</li></ul><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p>此外还有两个无关紧要的问题，比如扬声器素质一般，塑料机身。但在此价格，不将其作为主力机，只将其作为玩具或EDC是优异的。相比手机，一块大屏幕和全键盘能让人更专注的完成一个任务。而搭配xfce使用和linux的高度可自定义，这部电脑可以让人在极致的简约美下闲适的专注于自己的爱好，比如学习一些只需要编辑文本的编程学习什么的，不用担心续航，不用被主力机上杂乱的各种服务、应用、和积累的媒体、文档分散注意力，真是优雅。<br>以上是我带着这部电脑在一个会场敲下的文字，之后我直接盒盖带走了电脑，此后过了大概5个小时，现在我躺在宿舍床上敲下这行文字。要是我的主力机直接合盖带走的话很多时候会睡死，电池也会掉好多电，可能是和win10的睡眠还是休眠有关，也可能和我安装的PowerToys的awake功能有关。在这部电脑上，虽然开盖几秒钟后xfce发生了卡死的情况，只有鼠标能动，但是好在可以通过&lt;ctrl&gt;+&lt;alt&gt;+&lt;F(n)&gt;按键进入linux shell。通过执行</p><blockquote><p>service restart lightdm</p></blockquote><p>解决。后来我删除了xfce-screensaver，改为使用light-locker，倒是不会卡死了，但开盖后会直接显示几秒盒盖前画面，会造成信息泄漏。</p><h1 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h1><p>这种电脑如果想用来当主力机一定不可能，它的html5网页渲染性能还不如手机（与使用骁龙865的红米k30pro相比），存储空间也小。但如果你期望拥有一部笔记本只用来写文本文档（如python、markdown、html），或者直访问静态网页，绝对没问题。根据geekbench上的搜索结果，<br>n3350有</p><blockquote><p>Single-Core Score 268<br>Multi-Core Score 613</p></blockquote><p>的成绩，而树莓派4b成绩为</p><blockquote><p>Single-Core Score 202<br>Multi-Core Score 604</p></blockquote><p>如果愿意买二手的这部电脑，那就是决定的时间了：架构选arm还是x86、是开发板还是真正的个人电脑、是买来不用还是每天爱不释手。我都选择过，但是我的树莓派买来放了两年就打开用了几次，好玩也有用，但后来没忍住诱惑加了100多元和别人换了一块ax309的FPGA开发板、一块TI的物联网开发板和一些电子耗材，更少打开了😹️</p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>这篇文章同样做到了在写的过程中学习markdown，通过尝试植入表情理解了html中图片标签的功能。和其他文章一样都可作为我未来写博客的参照(但是不慎删除了图片，算了反正也不难)</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>提到的代码<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;$1&quot;</span> ];then<br>echo <span class="hljs-string">&quot;current parameter: &quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> -gt <span class="hljs-number">0</span> ] &amp;&amp; [ <span class="hljs-variable">$1</span> -lt <span class="hljs-number">346</span> ];then<br>        echo <span class="hljs-string">&quot;$1&quot;</span> &gt; <span class="hljs-regexp">/sys/</span>class<span class="hljs-regexp">/backlight/i</span>ntel_backlight/brightness<br>    elif [ ! <span class="hljs-variable">$1</span> -gt <span class="hljs-number">0</span> ];then<br>        echo <span class="hljs-string">&quot;1&quot;</span> &gt; <span class="hljs-regexp">/sys/</span>class<span class="hljs-regexp">/backlight/i</span>ntel_backlight/brightness<br>    elif [ ! <span class="hljs-variable">$1</span> -lt <span class="hljs-number">346</span> ];then<br>        echo <span class="hljs-string">&quot;345&quot;</span> &gt; <span class="hljs-regexp">/sys/</span>class<span class="hljs-regexp">/backlight/i</span>ntel_backlight/brightness<br>    fi<br><span class="hljs-keyword">else</span><br>    echo <span class="hljs-string">&quot;no parameter input&quot;</span><br>fi<br>cat <span class="hljs-regexp">/sys/</span>class<span class="hljs-regexp">/backlight/i</span>ntel_backlight/brightness;<br><span class="hljs-keyword">exit</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <code>cat /sys/class/power_supply/BAT0/capacity</code><span class="hljs-string">&quot; # &quot;</span><code>date</code> &gt;&gt; log_battery_life.log<br><span class="hljs-built_in">echo</span> <code>cat /sys/class/power_supply/BAT0/capacity</code><span class="hljs-string">&quot; # &quot;</span><code>date</code> <br></code></pre></td></tr></table></figure><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
      <category>评测</category>
      
    </categories>
    
    
    <tags>
      
      <tag>干货</tag>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>进军NFC</title>
    <link href="/2022/NFC-imcoming/"/>
    <url>/2022/NFC-imcoming/</url>
    
    <content type="html"><![CDATA[<h1 id="从大创申报书到我的hacker梦想"><a href="#从大创申报书到我的hacker梦想" class="headerlink" title="从大创申报书到我的hacker梦想"></a>从大创申报书到我的hacker梦想</h1><p>这几天是一年一度写大创申报书的时候了，大二下的好多人都在整大创。</p><p>我负责i2i实验室这边的应用开发，在写申报书时突然重新萌发了对NFC的兴趣。</p><p>NFC应该是个很新的技术，而我第一次听说它不是在手机上，而是proxmark3。因为现在pm3的售价依然让我不敢买，所以便想借助这一契机深入研究下NFC功能。不过我现在还在收集资料的过程中（2022年03月28日），所以这个博客很有可能到了22年10月（大创截止的时间）能写完。</p><h1 id="资料准备"><a href="#资料准备" class="headerlink" title="资料准备"></a>资料准备</h1><p>芯片选型一直都是我最迷茫的步骤，还好有前人（稚晖君）的工作让我能够学习，他附上的开源仓库中给我了一个重要的信息：<strong>NFC的协议</strong></p><h2 id="NFC的协议"><a href="#NFC的协议" class="headerlink" title="NFC的协议"></a>NFC的协议</h2><pre><code class="hljs">ISO 15693 (支持芯片：ST25DV)ISO 14443 (支持芯片：ST95或者ST25T)</code></pre><h2 id="常见读取器的结构"><a href="#常见读取器的结构" class="headerlink" title="常见读取器的结构"></a>常见读取器的结构</h2><p>pm3<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/Proxmark/proxmark3">[1]</span></a></sup>基于FPGA，开源仓库中有其代码，计划将来研究，刚好这学期学习数电需要用到verilog语句</p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/Proxmark/proxmark3">https://github.com/Proxmark/proxmark3</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>日常</category>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派apt公钥错误解决方案</title>
    <link href="/2022/rpi-pubkeyErr/"/>
    <url>/2022/rpi-pubkeyErr/</url>
    
    <content type="html"><![CDATA[<p>今天试着玩了一天esp8266，发现要是只是想试一下模块通信的话需要重刷程序，flash毕竟会磨损，要是总这样造也稍微有点心疼，最主要是编译烧写太费时间。于是想到用树莓派。烧完程序打算换源的时候遇到了apt update报错。</p><p><code>W: GPG error: http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian bullseye InRelease: The following signatures couldn&#39;t be verified because the public key is not available: NO_PUBKEY [一串密钥a]</code></p><p><code>E: The repository &#39;http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian bullseye InRelease&#39; is not signed.</code></p><h3 id="解决方法（网上找的）"><a href="#解决方法（网上找的）" class="headerlink" title="解决方法（网上找的）"></a>解决方法（网上找的）</h3><p><code>先输入：gpg --keyserver  keyserver.ubuntu.com --recv-keys [刚才那一串密钥a]</code></p><p><code>然后输入：gpg --export --armor [刚才那一串密钥a] | sudo apt-key add -</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>密钥可能有几个，一个一个的替换、输入。</p>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今年更严峻的疫情</title>
    <link href="/2022/halfwayinJan/"/>
    <url>/2022/halfwayinJan/</url>
    
    <content type="html"><![CDATA[<p>时间过的太快了，上次博客更新居然已经是</p><h1 id="一次奇遇"><a href="#一次奇遇" class="headerlink" title="一次奇遇"></a>一次奇遇</h1><p>这篇文章标题前说了一半的话是在实验室门口敲下的，随后门开了，我就进去给机械键盘润轴了（只是借电烙铁拆轴而已）。然后，当天晚上0点发消息，23号全员核酸，24号等核酸结果（其实我要是没有因为怂退了24号早上的票，就能不损失退票费并且坐高铁到家了），25号凌晨登上空调快车。</p><p>回家第一次变得难得且奇妙。</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅析游戏看门狗2的故障艺术</title>
    <link href="/2022/glitchArtofWD2/"/>
    <url>/2022/glitchArtofWD2/</url>
    
    <content type="html"><![CDATA[<p>看门狗的美术很有趣。<br>今天猜测一下这个图片的绘制方式，希望能够抛砖引玉。（很少见到这方面的教程，不知道怎么绘制，希望能够通过Blender风格化渲染的方式实现）<br><img src="/img/WD2Art.png" alt="故障艺术"><br>这是<a href="https://youtu.be/KJGdTJUi-YE?t=71">这个视频</a>的截图。</p><ul><li>大致由后侧呈同心圆排列的点<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="关键词：halftone、半色调[参考链接](https://blenderartists.org/t/halftone-pattern-in-blender-update/1136023)">[3]</span></a></sup>，同心圆被两条螺旋线遮挡，前端Dedsec文字及死神的形象。</li><li>同心圆由随机排列的点纹理组成。死神的灰度由水平翻转过的上三角灰度方块组成。</li><li>看门狗的故障艺术（仅指过场），由马赛克<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="模仿看门狗1的开头，常见于mpeg视频编码的I帧缺失，经过我的寻找有[这个视频](https://youtu.be/5TtJYeZjlIM?t=304)讲解了一种实现途径，关键词：“Datamosh”">[1]</span></a></sup>和与这个同心圆上的细节类似的点状纹理，以及破解组的艺术字体类似。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="关键词：BIG TEXT Letters Font、linux的toilet工具">[2]</span></a></sup><br/></li></ul><hr><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1><p><u>看门狗游戏还有更多有趣的效果，但是作为一个blender初学者，今天坐在电脑前研究了一下午图片的效果怎么实现。</u></p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>模仿看门狗1的开头，常见于mpeg视频编码的I帧缺失，经过我的寻找有<a href="https://youtu.be/5TtJYeZjlIM?t=304">这个视频</a>讲解了一种实现途径，关键词：“Datamosh”<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>关键词：BIG TEXT Letters Font、linux的toilet工具<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>关键词：halftone、半色调<a href="https://blenderartists.org/t/halftone-pattern-in-blender-update/1136023">参考链接</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
      <category>美术</category>
      
      <category>Blender</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git配置代理</title>
    <link href="/2022/git_proxySet/"/>
    <url>/2022/git_proxySet/</url>
    
    <content type="html"><![CDATA[<h1 id="git代理"><a href="#git代理" class="headerlink" title="git代理"></a>git代理</h1><p>删除命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global --<span class="hljs-built_in">unset</span> [name]<br></code></pre></td></tr></table></figure><p>添加git config配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global [name] [value]<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.proxy http://127.0.0.1:7890<br>git config --global https.proxy https://127.0.0.1:7890<br>git config -l<br></code></pre></td></tr></table></figure><h1 id="npm代理"><a href="#npm代理" class="headerlink" title="npm代理"></a>npm代理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> proxy=http://127.0.0.1:7890<br>npm config <span class="hljs-built_in">set</span> https-proxy http://127.0.0.1:7890<br><br>npm config delete proxy<br>npm config delete https-proxy<br></code></pre></td></tr></table></figure><h1 id="apt代理"><a href="#apt代理" class="headerlink" title="apt代理"></a>apt代理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">APT configuration file method<br><br>This method uses the apt.conf file which is found in your /etc/apt/ directory. This method is useful if you only want apt-get (and not other applications) to use a http-proxy permanently.<br><br>On some installations there will be no apt-conf file set up. Edit apt-conf file (or create a new one if you have no one yet) using the editor of your choice.<br><br>&gt; sudo nano /etc/apt/apt.conf<br><br>Add this line to your /etc/apt/apt.conf file (substitute your details for yourproxyaddress and proxyport).<br><br>&gt; Acquire::http::Proxy &quot;http://yourproxyaddress:proxyport&quot;;<br><br>Save the apt.conf file.<br></code></pre></td></tr></table></figure><h1 id="全局代理（貌似不管用）"><a href="#全局代理（貌似不管用）" class="headerlink" title="全局代理（貌似不管用）"></a>全局代理（貌似不管用）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> http_proxy=http://127.0.0.1:7890<br><span class="hljs-built_in">export</span> https_proxy=http://127.0.0.1:7890<br><span class="hljs-built_in">export</span> all_proxy=socks5://127.0.0.1:7891<br><span class="hljs-built_in">export</span> no_proxy=<span class="hljs-string">&quot;127.0.0.1,localhost,*.local.com&quot;</span><br><br><span class="hljs-built_in">export</span> http_proxy=http://[::]:7890<br><span class="hljs-built_in">export</span> https_proxy=http://[::]:7890<br><span class="hljs-built_in">export</span> all_proxy=socks5://[::]:7891<br><span class="hljs-built_in">export</span> no_proxy=<span class="hljs-string">&quot;127.0.0.1,localhost&quot;</span><br><br><span class="hljs-built_in">export</span> no_proxy=<span class="hljs-string">&quot;localhost,127.0.0.0/8,*.local&quot;</span><br><span class="hljs-built_in">export</span> NO_PROXY=<span class="hljs-string">&quot;localhost,127.0.0.0/8,*.local&quot;</span><br><span class="hljs-built_in">export</span> all_proxy=socks://127.0.0.1:7891/<br><span class="hljs-built_in">export</span> ALL_PROXY=socks://127.0.0.1:7891/<br><span class="hljs-built_in">export</span> http_proxy=http://127.0.0.1:7890/<br><span class="hljs-built_in">export</span> HTTP_PROXY=http://127.0.0.1:7890/<br><span class="hljs-built_in">export</span> ftp_proxy=http://127.0.0.1:7890/<br><span class="hljs-built_in">export</span> FTP_PROXY=http://127.0.0.1:7890/<br><span class="hljs-built_in">export</span> https_proxy=http://127.0.0.1:7890/<br><span class="hljs-built_in">export</span> HTTPS_PROXY=http://127.0.0.1:7890/<br><br>env | grep proxy<br><br><span class="hljs-built_in">unset</span> no_proxy<br><span class="hljs-built_in">unset</span> NO_PROXY<br><span class="hljs-built_in">unset</span> all_proxy<br><span class="hljs-built_in">unset</span> ALL_PROXY<br><span class="hljs-built_in">unset</span> http_proxy<br><span class="hljs-built_in">unset</span> HTTP_PROXY<br><span class="hljs-built_in">unset</span> ftp_proxy<br><span class="hljs-built_in">unset</span> FTP_PROXY<br><span class="hljs-built_in">unset</span> https_proxy<br><span class="hljs-built_in">unset</span> HTTPS_PROXY<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>干货</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初次挖掘HID和硬件工程</title>
    <link href="/2022/HID_firstDig/"/>
    <url>/2022/HID_firstDig/</url>
    
    <content type="html"><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><p>谷歌了一通，之前虽然也谷歌过但是从来没找到切入点，今天找到外国论坛上别人问过的帖子，跟着跟着就来到了Digispark开发板的页面，之前就知道Arduino的Leonardo开发板支持keyboard库，也知道Digispark开发板比较便宜，但是不知道究竟怎么实现的，虽然好像可以翻库的源码，但是因为手里有esp8266，所以不想再买别的功能重复的开发板。而且当时并没有找到esp8266单板实现HID功能的，就看能不能自己实现。今天找到了<a href="https://space.bilibili.com/213123506">这个UP主</a>的<a href="https://www.bilibili.com/video/BV19U4y1j7PF">视频</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="过程：先以usb、嵌入式、实现 作为关键词搜索库文件，找到arduino的库，找到了这个up主的github开源项目，找到视频。说起来巧，这个up主页还有一个通过抓包蓝牙自制喵喵机的项目之前我就觉得很NB">[1]</span></a></sup>。<br/><br>再看到评论区有人提到别的芯片ch9329(up使用ch9328)，上<a href="https://www.semiee.com/">半导小芯</a>没看懂有什么区别。看来<u>芯片选型</u>也是下一步需要认真考虑的事情。<br/><br>知乎搜了一下芯片选型，他们说硬件工程师靠经验，推荐华为的硬件工程师手册。找到百度文库有但是要vip。想起来图书馆途径的百度文库可以下vip资源<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="共159页，我下下来还没细看，这个非高校版的[链接](https://wenku.baidu.com/view/eb27a1660875f46527d3240c844769eae109a36c.html)供参考">[2]</span></a></sup>，然后真可以。我爱图书馆❤<br/><br><del><font color="gray">写博客真费时间，好多时间都忍不住扯点闲话，扯闲话和刚才经历以上内容一样有趣，但是写博客最多只能起到换换脑子的作用，好像没有价值啊。还有，我感觉打字好慢，这个假期要不要学下双拼🤔</font></del></p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h4><blockquote><p>上大学之前对游戏看门狗很感兴趣，由此产生对Kali Linux的浓厚“兴趣”（引号是因为到现在为止我还是不会使用它之中的工具），然后因为高中生没什么可支配的钱，为了省钱而跟着视频尝试搭建VPS，由此学了一丁点Linux的使用，也就是apt换个源这样的简单操作，还是为了Kali，感觉拥有一部“黑客手机”很帅，于是尝试编译内核，得知了AOSP，接触了LineageOS。但是，但是到现在我依然不知道怎么编译一个Linux系统，怎么才能过编译（人生中唯二两次过编译，一次是一点没改的LineageOS代码，一次是在VPS上一点没改的玩客云代码，还因为网络问题没有下载下来，跟着实例一起销毁了）。编译内核就是为了NetHunter的特色功能，我唯一认识的就是HID Duck，有两种实现途径——手机、开发板。<br/><br>手机直到这学期在闲鱼上收了一部Nexus5才尝到原生的爽，而开发板总让我意难平——手机内核模块可能存在难度，我先不去啃，但是上学期学过单片机，为什么我不能实现这么基础的功能呢？而且大一暑假末打算DIY游戏外设，由此在大二第一学期开始时打算看USB-HID。现在在学校回不去家就随便看看吧。</p></blockquote><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>过程：先以usb、嵌入式、实现 作为关键词搜索库文件，找到arduino的库，找到了这个up主的github开源项目，找到视频。说起来巧，这个up主页还有一个通过抓包蓝牙自制喵喵机的项目之前我就觉得很NB<br/><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>共159页，我下下来还没细看，这个非高校版的<a href="https://wenku.baidu.com/view/eb27a1660875f46527d3240c844769eae109a36c.html">链接</a>供参考<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客建立教程备忘录</title>
    <link href="/2022/blog_tutorial/"/>
    <url>/2022/blog_tutorial/</url>
    
    <content type="html"><![CDATA[<p><font color="gray" size="2"><del>前天起计划搭建个人博客，花了一点时间就大概搞出来了，现在分享下我的流程，帮大家快速建立个人博客，以下操作需要电脑。</del></font><br/><br><del>摆烂了，根据第一个参考链接从概述开始就可以了，官方文档下面还有上传github的办法</del><br/><br/><strong>用power shell执行hexo指令时需要打全成hexo.cmd（tab键也可以补全）</strong><br/><br/></p><h1 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h1><ul><li>生成博客：hexo g</li><li>预览博客：hexo s <font color="gray">浏览器打开命令输入后出来的网址</font></li><li>上传博客：hexo d <font color="gray">github page在上传成功后需要过一会才会变化，只要最近commit的id对的上就证明没错</font></li><li>hexo clean <font color="gray">不知道有什么用</font><br><br/><br/></li></ul><p>如果hexo d 出错先检查下网络，然后看看根目录（不是themes下主题的）_config.yml的 “deploy:” 那里有没有打上git仓库信息。<br/><br/><br>分支也不要搞错，例如自己项目里分支是 main 的话不要按照教程打成 master 不知道这会不会有问题。<br/><br/></p><p>参考链接：<br/><br>1.<a href="https://hexo.io/zh-cn/docs">Hexo官方文档</a><br/><br>2.<a href="https://zhuanlan.zhihu.com/p/74778630">不需懂代码，10分钟在Github搭建免费且已成型的个人博客网站 - 知乎</a><br/><br>3.<a href="https://zhuanlan.zhihu.com/p/111832962">在Github/Gitee上搭建免费个人博客网站（进阶篇） - 知乎</a><br/></p>]]></content>
    
    
    <categories>
      
      <category>技术备忘</category>
      
      <category>博客</category>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/hello-world/"/>
    <url>/2022/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
